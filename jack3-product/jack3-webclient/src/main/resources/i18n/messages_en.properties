
AccessRight.EXTENDED_READ        = Extended read right
AccessRight.GRADE                = Grade right
AccessRight.MANAGE               = Manage right
AccessRight.READ                 = Read right
AccessRight.WRITE                = Write right
AccessRight.legend               = Legend: R = Read, E = Extended read, W = Write G = Grade, M = Manage
AccessRight.letter.EXTENDED_READ = E
AccessRight.letter.GRADE         = G
AccessRight.letter.MANAGE        = M
AccessRight.letter.READ          = R
AccessRight.letter.WRITE         = W
AccessRight.short.EXTENDED_READ  = Ext. read
AccessRight.short.GRADE          = Grade
AccessRight.short.MANAGE         = Manage
AccessRight.short.READ           = Read
AccessRight.short.WRITE          = Write

CourseEditView.deepCloningNeedFixedListProvider      = The "fixed assignment" mode must be set for the course exercises!
CourseEditView.deepCloningOnlyFrozenExercisesAllowed = The course may only contain frozen exercises!

checkResultView.log        = Log
checkResultView.noLogFound = No log found!

ckEditor.language = en 

competencies.noDimensionSelection                       = Select Dimension
competencies.noSubjectSelection                         = Select Subject

confirmDialog.optionalReason = Reason (optional)
confirmDialog.reason         = Reason

courseEdit.Revision_ID                                  = Number of Versions
courseEdit.addFeedback                                  = Add Feedback
courseEdit.allExercises                                 = All exercises
courseEdit.cancel                                       = Cancel
courseEdit.changeContentProviderAlert                   = Are you sure you want to change your selection?
courseEdit.changeContentProviderWarn                    = Warning!
courseEdit.changeSubjectAlert                           = Are you sure you want to change the subject?
courseEdit.changeSubjectWarn                            = Warning!
courseEdit.contentSelection.noSelection                 = Please select
courseEdit.courseExercises                              = Course Exercises
courseEdit.courseFeedback                               = Course feedback
courseEdit.courseFeedback.condition                     = Condition
courseEdit.courseFeedback.text                          = Content and Title
courseEdit.courseFeedback.title                         = Title (optional)
courseEdit.courseNavigationError                        = An error occurred while navigating to the previous/next course.
courseEdit.courseResources                              = Course Resources
courseEdit.deleteFeedback                               = Delete this feedback
courseEdit.deleteResource                               = Delete this resource
courseEdit.editExerciseDetails                          = Additional Settings
courseEdit.exercisesSortBy                              = Sort by
courseEdit.fileNameCourseResource                       = File
courseEdit.fileSizeLimitExceeded                        = File is bigger than the limit of
courseEdit.fileUploadedByUser                           = Uploaded by
courseEdit.forbiddenCourse                              = You do not have the permission to edit this course!
courseEdit.frozenTitle                                  = Title for frozen version
courseEdit.highestAverage                               = Highest Average
courseEdit.inAllCourse                                  = in all courses
courseEdit.internalDescription                          = Internal Description
courseEdit.language                                     = Language
courseEdit.lowestAverage                                = Lowest Average
courseEdit.navigation                                   = Navigation
courseEdit.providerModus                                = Exercise selection
courseEdit.publicDescription                            = Public Description
courseEdit.removeFromExerciseList                       = Remove this exercise from course
courseEdit.removeFromFolderList                         = Remove this folder from course
courseEdit.save                                         = Save
courseEdit.scoring                                      = Scoring
courseEdit.subject                                      = Subject
courseEdit.tableEmptyMsg                                = No entrys found
courseEdit.test                                         = Test
courseEdit.titel                                        = Title
courseEdit.uploadBtn                                    = Choose
courseEdit.uploadedTimestamp                            = Created
courseEdit.validate                                     = Validate

courseEditExerciseTree.availableExercises   = Available Exercises
courseEditExerciseTree.error.noFolder       = In this mode only folders can be selected.
courseEditExerciseTree.error.parentSelected = This folder cannot be unselected because a parent folder is selected.
courseEditExerciseTree.error.rootFolder     = Root folders must not be selected.
courseEditExerciseTree.selectedExercises    = Selected Exercises

courseEditProvider.avgDifficulty                        = Average Difficulty
courseEditProvider.chooseFolder.changeNumberOfExercises = Change number of Exercises
courseEditProvider.chooseFolder.mutableValue            = These values represent only the current state. They change when new exercises are added or deleted in the selected folders.
courseEditProvider.fixedAllocation.changeVersion        = Change frozen Version
courseEditProvider.noExercises                          = No exercises in this folder
courseEditProvider.noRights.confirmRemove               = Do you really want to remove the item from the course?
courseEditProvider.noRights.exercise                    = You do not have any rights on the exercise. If you remove the exercise, you cannot add it again.
courseEditProvider.noRights.folder                      = You do not have any rights on this folder. If you remove the folder, you cannot add it again.
courseEditProvider.numberOfExercises                    = Number of Exercises
courseEditProvider.numberOfFolders                      = Number of Folders
courseEditProvider.pointSum                             = Total Points
courseEditProvider.symbols.frozenAvailable              = Frozen Versions available
courseEditProvider.symbols.frozenSelected               = Frozen Version selected
courseEditProvider.symbols.meanwhileDeleted             = Item has been deleted
courseEditProvider.symbols.noRights                     = No rights on this element

courseEditView.meanwhileDeleted         = The following objects were meanwhile deleted:
courseEditView.saveOverlayFooterFail    = File "{0}" already exists!
courseEditView.saveOverlayFooterSuccess = Don't forget to also save!
courseEditView.saveOverlayHeaderFail    = Upload failed
courseEditView.saveOverlayHeaderSuccess = uploaded
courseEditView.stillBeGone              = If you accept this Version as new, these objects will still be gone!

courseMainMenu = Main menu

courseMainMenu.automatically                                 = (done automatically)
courseMainMenu.disenrollmentDenied                           = Disenrollment denied
courseMainMenu.disenrollmentDenied.afterDeadline             = You will not be able to disenroll because the deadline has already passed.
courseMainMenu.enrollment                                    = Enrollment
courseMainMenu.enrollmentAction.disenroll                    = Disenroll
courseMainMenu.enrollmentAction.enroll                       = Enroll
courseMainMenu.enrollmentAction.joinWaitingList              = Join waiting list
courseMainMenu.enrollmentAction.password                     = Password of the course
courseMainMenu.enrollmentAction.showLog                      = Show history
courseMainMenu.enrollmentDenied                              = Enrollment is not possible.
courseMainMenu.enrollmentDenied.alreadyInLinkedCourse        = You cannot register for this course because you are already registered in course "{0}".
courseMainMenu.enrollmentDenied.full                         = You cannot register for this course as there are no more free places available.
courseMainMenu.enrollmentDenied.outsideEnrollmentPeriod      = You cannot register for this course because you are not within the enrollment period.
courseMainMenu.enrollmentDenied.waitingListEnabled           = You can be placed on the waiting list and will be moved up within the registration period.
courseMainMenu.enrollmentInfo.disenrollOpenSubmissionWarning = If you disenroll from the course, the current submission will automatically be closed.
courseMainMenu.enrollmentInfo.disenrolledAt                  = Date of disenrollment
courseMainMenu.enrollmentInfo.disenrollmentDeadline          = Disenrollment deadline
courseMainMenu.enrollmentInfo.enrolledAt                     = Date of enrollment
courseMainMenu.enrollmentInfo.enrollmentDeadline             = Enrollment deadline
courseMainMenu.enrollmentInfo.enrollmentStart                = Begin of enrollment
courseMainMenu.enrollmentInfo.freePlaces                     = Free places
courseMainMenu.enrollmentInfo.notInteracted                  = You are not enrolled.
courseMainMenu.enrollmentInfo.onWaitingListMoveUpNotPossible = Since the enrollment deadline has expired, you can no longer automatically move up.
courseMainMenu.enrollmentInfo.onWaitingListMoveUpPossible    = You are on the waiting list and will be moved up automatically.
courseMainMenu.enrollmentInfo.waitingSince                   = Entry to the waiting list
courseMainMenu.manually                                      = (done manually)
courseMainMenu.manuallyReason                                = (done manually, reason: {0})
courseMainMenu.notInteractable                               = You are not authorized to interact with this course.
courseMainMenu.oldParticipations                             = Previous submissions
courseMainMenu.oldParticipations.automaticallyClosed         = (automatically closed by the system)
courseMainMenu.oldParticipations.begun                       = Begun
courseMainMenu.oldParticipations.manuallyClosed              = (manually closed by a lecturer)
courseMainMenu.oldParticipations.manuallyClosedReason        = (manually closed by a lecturer, reason: {0})
courseMainMenu.startDenied                                   = It is not possible to start a new submission.
courseMainMenu.startDenied.alreadyParticipated               = You cannot start the course again because you have already participated, further participation is not allowed.
courseMainMenu.startDenied.outsidesubmissionPeriod           = You cannot attend this course because you are outside of the submission period.
courseMainMenu.submission                                    = Submission
courseMainMenu.submissionAction.continue                     = Continue submission
courseMainMenu.submissionAction.password                     = Personal password
courseMainMenu.submissionAction.start                        = Start submission
courseMainMenu.submissionInfo.continueMessage                = You can continue submitting the course.
courseMainMenu.submissionInfo.deadline                       = Submission deadline
courseMainMenu.submissionInfo.lastVisit                      = Last visited
courseMainMenu.submissionInfo.passwordRequired               = This course requires a password. Please authenticate with your personal password to continue.
courseMainMenu.submissionInfo.start                          = Submission begin
courseMainMenu.submissionInfo.startMessage                   = You can now start a new submission.
courseMainMenu.submissionInfo.startMessageTimeLimit          = You will be able to make submission for {0} minutes after starting the course. After that time, no further submissions will be possible.
courseMainMenu.submissionInfo.started                        = Ongoing submission started
courseMainMenu.submissionInfo.timelimit                      = Time limit

courseOffer.enrollmentEmail.content                                             = <p>\r\n  Dear JACK user,\r\n</p>\r\n\r\n<p>\r\n  You have successfully registered for the course {0}. You can find the course at:<br>\r\n  {1} \r\n</p>\r\n\r\n<p>\r\n  {2}\r\n</p>\r\n\r\n<p>\r\n  Kind regards,<br>\r\n  the JACK Team\r\n</p>\r\n\r\n\r\n
courseOffer.enrollmentEmail.lecturerMessage                                     = The course description:<br>
courseOffer.enrollmentEmail.subject                                             = [JACK] You are enrolled for the course {0}
courseOffer.frozenCourse                                                        = Frozen Version
courseOffer.internalDescription                                                 = Internal Description
courseOffer.lastVisit                                                           = Last Visit
courseOffer.manuallyDisenrollmentEmail.content                                  = <p>\r\n  Dear JACK user,\r\n</p>\r\n\r\n<p>\r\n  A lecturer has dis-enrolled you from the course {0}. You can find the course at:<br>\r\n  {1}\r\n</p>\r\n\r\n<p>\r\n  If there is a misstake with this dis-enrollment, please contact the appropriate lecturer.\r\n</p>\r\n\r\n<p>\r\n  {2}\r\n</p>\r\n\r\n<p>\r\n  Kind regards,<br>\r\n  the JACK Team\r\n</p>
courseOffer.manuallyDisenrollmentEmail.contentDisabledWaitlist                  = <p>\r\n  Dear JACK user,\r\n</p>\r\n\r\n<p>\r\n  You were dis-enrolled from the waiting list for the course, as the waiting list was disabled {0}. You can find the course at:<br>\r\n  {1}\r\n</p>\r\n\r\n<p>\r\n  If there is a misstake with this dis-enrollment, please contact the appropriate lecturer.\r\n</p>\r\n\r\n<p>\r\n  Kind regards,<br>\r\n  the JACK Team\r\n</p>
courseOffer.manuallyDisenrollmentEmail.lecturerMessage                          = A lecturer has sent you the following message:<br/>
courseOffer.manuallyDisenrollmentEmail.subject                                  = [JACK] You have been dis-enrolled from the course {0}\r\n
courseOffer.manuallyEnrollmentEmail.content                                     = <p>\r\n  Dear JACK user,\r\n</p>\r\n\r\n<p>\r\n  A lecturer has enrolled you for the course {0}. You can find the course at:<br>\r\n  {1}\r\n</p>\r\n\r\n<p>\r\n  If there is a misstake with this course registration, please contact the appropriate lecturer.\r\n</p>\r\n\r\n<p>\r\n  {2}\r\n</p>\r\n\r\n<p>\r\n  {3}\r\n</p>\r\n\r\n<p>\r\n  Kind regards,<br>\r\n  the JACK Team\r\n</p>\r\n
courseOffer.manuallyEnrollmentEmail.enrollmentMessage                           = A message from the lecturer for the manual enrollment:<br/>
courseOffer.manuallyEnrollmentEmail.subject                                     = [JACK] You have been enrolled for the course {0}\r\n
courseOffer.movedUpEmail.content                                                = <p>\r\n  Dear JACK user,\r\n</p>\r\n\r\n<p>\r\n  You have moved up from the waiting list for the course {0}. You are now enrolled for the course.\r\n</p>\r\n\r\n<p>\r\n  The link to the course:<br>\r\n  {1}\r\n</p>\r\n\r\n<p>\r\n  {2}\r\n</p>\r\n\r\n<p>\r\n  Kind regards,<br>\r\n  the JACK Team\r\n</p>
courseOffer.movedUpEmail.subject                                                = [JACK] You have moved up from the waiting list and are now enrolled for the course {0}
courseOffer.publicDescription                                                   = Public Description
courseOffer.waitingListEmail.content                                            = <p>\r\n  Dear JACK user,\r\n</p>\r\n\r\n<p>\r\n  You have been placed on the waiting list for the course {0}. You will be automatically informed with another email if you move up from the waiting list.\r\n</p>\r\n\r\n<p>\r\n  You can find the course at:<br>\r\n  {1}\r\n</p>\r\n\r\n<p>\r\n  {2}\r\n</p>\r\n\r\n<p>\r\n  Kind regards,<br>\r\n  the JACK Team\r\n</p>
courseOffer.waitingListEmail.subject                                            = [JACK] You are on the waiting list for the course {0}

courseOfferEdit.accessModeMissing                                               = Please add access mode. Otherwise students will not be able to see course offer.
courseOfferEdit.accessRestrictionsSettings                                      = Access Restrictions
courseOfferEdit.allowExerciseRestart                                            = Restart Exercise
courseOfferEdit.allowExerciseRestartHint                                        = A restart starts a new submission of the exercise in the running course. The previous submission is saved and is included in the evaluation depending on the mode. The task is restarted without any previous input being displayed. The time limit since the beginning of the course continues to run.
courseOfferEdit.allowHints                                                      = Request Hints
courseOfferEdit.allowPauses                                                     = Pause Course and Continue Later
courseOfferEdit.allowStageRestart                                               = Restart Subtask Submissions
courseOfferEdit.allowStageRestartHint                                           = When a subtask is restarted ("Start over from here"), all input from the respective subtask onwards is cleared and the score is reset to the previous state. The time limit of the course continues to run.
courseOfferEdit.allowStudentComments                                            = Add Comments for Lecturers
courseOfferEdit.autoAcceptNewRevision                                           = Always use latest course version
courseOfferEdit.automaticEnrollmentAction.emailFailedOnDisenrollmentWaitinglist = Some participants who were disenrolled from the waiting list could not be sent an email.
courseOfferEdit.automaticEnrollmentAction.emailFailedOnMoveUp                   = Some participants who were enrolled from the waiting list could not be sent an email.
courseOfferEdit.automaticEnrollmentAction.userTooMuch                           = The course will contain one more person than may be enrolled.
courseOfferEdit.automaticEnrollmentAction.userWillBeDisenrolled                 = One person will be disenrolled from the waiting list.
courseOfferEdit.automaticEnrollmentAction.userWillMoveUp                        = One person moves up from the waiting list.
courseOfferEdit.automaticEnrollmentAction.usersTooMuch                          = The course will contain {0} more people than are allowed to be enrolled.
courseOfferEdit.automaticEnrollmentAction.usersTooMuchHint                      = You can disenroll participants manually via the Participants overview.
courseOfferEdit.automaticEnrollmentAction.usersWillBeDisenrolled                = {0} people will be disenrolled from the waiting list.
courseOfferEdit.automaticEnrollmentAction.usersWillMoveUp                       = {0} people move up from the waiting list.
courseOfferEdit.courseAndAccessModeMissing                                      = Please add course and access mode. Otherwise students will not be able to see course offer.
courseOfferEdit.courseMissing                                                   = Please add course. Otherwise students will not be able to see course offer.
courseOfferEdit.courseOfferDisenrollmentDeadline                                = Sign Off Ends
courseOfferEdit.courseOfferEnrollmentEnds                                       = Sign On Ends
courseOfferEdit.courseOfferEnrollmentStarts                                     = Sign On Begins
courseOfferEdit.courseOfferSubmissionDeadline                                   = Submisson Ends
courseOfferEdit.courseOfferSubmissionStarts                                     = Submission Starts
courseOfferEdit.courseOfferVisibilityEnds                                       = Visibility ends
courseOfferEdit.courseOfferVisibilityStarts                                     = Visibility begins
courseOfferEdit.dependentEnrollmentHelperTooltip                                = These settings are only available, when Exlplicit Enrollment is required.
courseOfferEdit.dependentSubmissionSettingsHelperTooltip                        = These settings are only available, when an explicit submission start is required.
courseOfferEdit.eMailByEnrollment                                               = Send e-mail upon explicit Enrollment
courseOfferEdit.eMailByEnrollmentHint                                           = When a user explicit enrolls for the course offer, the user automatically receives an e-mail. The e-mail always contains the name of the course offer, the information that the user is enrolled and a link to the course.\r\n\r\nSubsequently, an extra message can be specified, which will also be sent in the e-mail.
courseOfferEdit.eMailByEnrollmentLabel                                          = Additional information\r\nwhen enrolling\r\nin the course offer
courseOfferEdit.eMailByWaitingList                                              = Send e-mail upon waiting list registration
courseOfferEdit.eMailForWaitingListHint                                         = When a user joined the waiting list for the course offer, the user automatically receives an e-mail. The e-mail always contains the name of the course offer, the information that the user is on the waiting list and a link to the course.\r\n\r\nSubsequently, an extra message can be specified, which will also be sent in the e-mail.
courseOfferEdit.eMailForWaitingListLabel                                        = Additional information when joining the waiting list
courseOfferEdit.eMailPreview                                                    = E-mail preview
courseOfferEdit.eMailSettingsHeader                                             = E-mails
courseOfferEdit.eMailStatus                                                     = As long as in the tab Enrollment Restrictions, explicit Enrollments are not required, it won't be possible to send e-mails.
courseOfferEdit.editAccessModeButtonText                                        = Edit List
courseOfferEdit.editCourseOffer                                                 = Edit Course Offer
courseOfferEdit.editPersonalPasswordsButtonText                                 = Edit Passwords
courseOfferEdit.enrollmentSettingsHeader                                        = Enrollment Restrictions
courseOfferEdit.explicitSubmissionStartRequiredCheckboxText                     = Explicit submission start required
courseOfferEdit.feedbackDuringCourse                                            = Information in a Running Course
courseOfferEdit.forbiddenCourseOffer                                            = You do not have the permission to edit this courseoffer!
courseOfferEdit.globalPassword                                                  = Global password
courseOfferEdit.globalPasswordClearButton                                       = Remove password
courseOfferEdit.globalPasswordHint                                              = Students must enter this password whenever they enroll / disenroll or are placed on the waiting list.
courseOfferEdit.hasExplicitEnrollment                                           = Explicit Enrollment Required
courseOfferEdit.hasWaitlistEnabled                                              = Enable waiting list registration
courseOfferEdit.hintUserDoesNotOwnReferencedCourse                              = Hint: Any change done here is irreversible, because you do not own the rights to the referenced course.
courseOfferEdit.hints.allowHintsHint                                            = Enables the students to show a hint while submitting an exercise, that can be defined in the exercise's settings. 
courseOfferEdit.hints.allowPausesHint                                           = Enables the students, to pause this course while working on it, and resume at a later time.
courseOfferEdit.hints.allowStudentCommentsHint                                  = Enables students, to write comments about the exercises in this course. These comments are available in the statistics for their respective exercise.
courseOfferEdit.hints.noCourseHint                                              = Only the course enrollment features can be used. Submitting the course by students is only possible if the course offer is linked to a course.
courseOfferEdit.language                                                        = Language:
courseOfferEdit.lastActive                                                      = Last Active
courseOfferEdit.limitExerciseRepetitions                                        = Limitation of repetitions per task
courseOfferEdit.linkToMainMenu                                                  = Public link
courseOfferEdit.linkToMainMenu.autostart                                        = Autostart
courseOfferEdit.linkToMainMenu.infobox                                          = Students can access the course offer via this link, as far as they have access. If autostart is deactivated, students will always land in the main menu, otherwise the course will be started or continued automatically according to the submission restrictions.
courseOfferEdit.linkToMainMenu.warnbox                                          = You can test the course offer via this link, but please note that you may generate <strong>real submissions and enrollments</strong>. If the course offer has a maximum number of participants, you take a up seat as well as students.
courseOfferEdit.linkedCourses                                                   = Course has Parallel Courses
courseOfferEdit.linkedCourses.disabledParent                                    = Unlinking courses of this folder is not permitted, as this setting is taken from a parent folder.
courseOfferEdit.linkedCourses.switchButton                                      = Change
courseOfferEdit.linkedCourses.switchButtonConfirmLink                           = Do you really want to link all Course Offers in the folder? Students can then only enroll in one Course Offer in the folder.<br>This change affects the entire folder and will take effect immediately, without any additional Course Offer saving.</strong>
courseOfferEdit.linkedCourses.switchButtonConfirmUnlink                         = Do you really want to unlink the Course Offers in the folder? Students can then enroll in multiple Course Offers in the folder.<br><strong>This change affects the entire folder and will take effect immediately, without any additional Course Offer saving.</strong>
courseOfferEdit.linkedCourses.tooltip                                           = <p>This setting applies to the entire folder. If activated, students cannot enrol in several courses in the folder at the same time.</p>.\r\n<p><strong>Example:</strong> Registration for a testate with several dates, where students can only choose one option.</p>
courseOfferEdit.ltiConsumerKey                                                  = Consumer Key
courseOfferEdit.ltiConsumerSecret                                               = Consumer Secret
courseOfferEdit.ltiEnabled                                                      = Allow access to this course offer via LTI
courseOfferEdit.ltiGloballyDisabled                                             = LTI is unavailable on this system.
courseOfferEdit.ltiUrl                                                          = URL
courseOfferEdit.manualEnrollment.alreadyEnrolled                                = (already enrolled)
courseOfferEdit.manualEnrollment.disabledAlreadyEnrolled                        = You cannot enroll this user because he/she is already enrolled.
courseOfferEdit.manualEnrollment.disabledNoRights                               = For manual enrollment you need extended read rights.
courseOfferEdit.manualEnrollment.noValidSelection                               = Your selection is invalid. Select an existing user who is not already enrolled.
courseOfferEdit.manualEnrollment.rightsMissing                                  = You are not entitled to enrol this user.
courseOfferEdit.manualEnrollment.statisticsHint                                 = An overview of all registrations can be found in the statistics.
courseOfferEdit.manualEnrollment.success                                        = User {0} was enrolled successfully.
courseOfferEdit.maxAllowedParticipants                                          = Max. Allowed Participants
courseOfferEdit.noAutocompleteMatch                                             = No match with existing users.
courseOfferEdit.noCourseSelection                                               = No course
courseOfferEdit.noSubjectSelection                                              = No subject
courseOfferEdit.onlyAllowSingularParticipation                                  = Only allow singular submission of the course
courseOfferEdit.onlyAllowSingularParticipationHint                              = If this option is activated, the course can no longer be started after it has already been completed once. The setting that individual submissions or exercises can be repeated is independent of this.
courseOfferEdit.personalPasswords                                               = Personal passwords
courseOfferEdit.personalPasswords.Active                                        = Personal passwords are active.
courseOfferEdit.personalPasswords.clearPasswords                                = Remove all passwords
courseOfferEdit.personalPasswords.csvUpload                                     = You can import a table with two columns in CSV format containing users and passwords.
courseOfferEdit.personalPasswords.inactiveTooltip                               = You can set and edit passwords. However, students will only be asked for their password, when the box is ticked for "Requires a personal password".
courseOfferEdit.personalPasswords.notActive                                     = Personal passwords are inactive.
courseOfferEdit.personalPasswords.uploadError                                   = The file could not be uploaded.
courseOfferEdit.requiredWarning                                                 = Configuration incomplete
courseOfferEdit.requiresPersonalPassword                                        = Requires a personal password
courseOfferEdit.showAccessModeButtonText                                        = Show List
courseOfferEdit.showCourseResult                                                = Show Overall Course Result
courseOfferEdit.showDifficulty                                                  = Show Difficulty
courseOfferEdit.showExerciseAndSubmission                                       = Show Exercise and Submission
courseOfferEdit.showFeedback                                                    = Show Feedback
courseOfferEdit.showPersonalPasswordsButtonText                                 = Show Passwords
courseOfferEdit.showResult                                                      = Show Result Points
courseOfferEdit.showResultDetails                                               = Show Detailled Results for All Exercises
courseOfferEdit.submissionRestrictionsSettingsHeader                            = Restrictions for Submission
courseOfferEdit.submissionReview                                                = Information on Closed Course Records
courseOfferEdit.switchToCourse                                                  = Switch to Course
courseOfferEdit.timeConfigurationDateMissing                                    = A date is required. If you do not want one to be there, please untick the checkbox.
courseOfferEdit.timeValidationError                                             = The time settings are erroneous.
courseOfferEdit.timeValidationError.enrollmentStartNotFirst                     = Sign on cannot be after "{0}".
courseOfferEdit.timeValidationError.submissionStartAfterSubmissionDeadline      = Submission start cannot be after Submission end.
courseOfferEdit.toggleUserFilter.allowlist                                      = Allowlist
courseOfferEdit.toggleUserFilter.allowlistInfo                                  = Only students on the list have access to the course offer (one entry per line).
courseOfferEdit.toggleUserFilter.blocklist                                      = Blocklist
courseOfferEdit.toggleUserFilter.blocklistInfo                                  = Every student is allowed to access the course offer, except the students on the list (one entry per line).
courseOfferEdit.toggleUserFilter.noSubsequentChanges                            = Changes made here do not subsequently affect students who are already registered. You may have to remove them manually.
courseOfferEdit.unlimitedHint                                                   = 0 = unlimited
courseOfferEdit.userToRegisterAlreadyExists                                     = User is already enrolled.
courseOfferEdit.userToRegisterDoesNotExist                                      = The User "{0}" does not exist.
courseOfferEdit.visibilityStatus.changes                                        = Changes become active only after saving.
courseOfferEdit.visibilityStatus.notVisible                                     = Currently, the course offer is not publicly visible.
courseOfferEdit.visibilityStatus.visible                                        = Currently, the course offer is publicly visible in accordance with the access restrictions.
courseOfferEdit.visibilityStatus.willBeVisible1                                 = The course offering will be unlocked 
courseOfferEdit.visibilityStatus.willBeVisible2                                 = .
courseOfferEdit.visibleToggle.notVisible                                        = Course offer is not visible.
courseOfferEdit.visibleToggle.visible                                           = Course offer is visible according to the access restrictions.

courseOfferParticipants = Participants overview

courseOfferParticipants.courseRecordDeletion               = Delete Submission
courseOfferParticipants.courseRecordDeletion.info          = You are about to delete a student submission. As a result the whole submission and all associated submissions will be irrevocable deleted.\nTo delete a submission, You have to enter the username of the associated person.
courseOfferParticipants.courseRecordDeletion.username      = Username:
courseOfferParticipants.courseRecordDeletion.wrongUsername = The entered name didn't match the username.
courseOfferParticipants.forCourseOffers                    = You are looking at aggregated participant data from the following Course Offers
courseOfferParticipants.noAvailableCourseOfferMode         = No participant data is yet available for the selected course offer.
courseOfferParticipants.noDataAvailableFolderMode          = No participant data is yet available for the selected course offers.
courseOfferParticipants.noMailOnDisenrollment              = Disenrollment was successful, but no e-mail could be sent to the user.
courseOfferParticipants.noMailOnEnrollment                 = Enrollment was successful, but no e-mail could be sent to the user.
courseOfferParticipants.statusForUser                      = Status for User
courseOfferParticipants.withCourse                         = With Course

coursePlayer.actions                       = Actions
coursePlayer.addComment                    = Leave a Comment
coursePlayer.backToCourseOverview          = Back to Course Overview
coursePlayer.begun                         = Begun
coursePlayer.bestSubmissionShort           = best
coursePlayer.bestSubmissionTooltip         = This course is scored based on best submissions per exercise instead of using the lastest one.
coursePlayer.difficulty                    = Difficulty
coursePlayer.lastVisited                   = Last Visited
coursePlayer.noEmailAddress                = There is no e-mail address connected with your profile.
coursePlayer.noExercises                   = This course contains no tasks.
coursePlayer.noSubmission                  = This exercise has not yet been submitted by you.
coursePlayer.remainingRestarts             = {0} restart(s) available
coursePlayer.restart                       = Restart
coursePlayer.restartNotAllowed             = Restart not allowed!
coursePlayer.reviewAfterExit               = Directly after closing your submission
coursePlayer.showLecturerEmail             = Add e-mail address to comment
coursePlayer.status                        = Status
coursePlayer.submissionReview              = Submission review starts
coursePlayer.timeExpiredDialog.description = The time for submitting this course has expired. You cannot submit any more exercises. All submissions up to this point have been saved, you can now finish the submission.
coursePlayer.timeExpiredDialog.title       = Time expired
coursePlayer.timeLeft                      = Time Left

coursePlayerView.olderSubmissionReview = Closed, Earlier Submission to Exercises Within the Current Course Participation

courseRecordSubmissions.begun                                    = Begun
courseRecordSubmissions.comments                                 = Comments
courseRecordSubmissions.course                                   = course
courseRecordSubmissions.courseOffer                              = CourseOffer
courseRecordSubmissions.deleteSubmissionDialog                   = Delete Submission
courseRecordSubmissions.deleteSubmissionDialog.exerciseName      = Exercisename:
courseRecordSubmissions.deleteSubmissionDialog.info              = You are about to delete a student submission. As a result the submission will be irrevocable deleted.\nTo delete a submission, You have to enter the name of the associated exercise.
courseRecordSubmissions.deleteSubmissionDialog.wrongExerciseName = The entered name didn't match the exercisename.
courseRecordSubmissions.deleteWholeSubmission                    = Delete course-submission
courseRecordSubmissions.exportFeedback                           = Export Feedback
courseRecordSubmissions.feedback                                 = Feedback to Course Result
courseRecordSubmissions.finished                                 = Finished
courseRecordSubmissions.forbiddenSubmission                      = You do not have the permission to view this submission!
courseRecordSubmissions.generalInformation                       = General Information
courseRecordSubmissions.lastVisited                              = Last Visited
courseRecordSubmissions.restartExerciseDialog.header             = Restart exercise
courseRecordSubmissions.restartExerciseDialog.question           = Restarting the exercise will dicard all points earned so far in this exercise. The student can no longer work on the current submission.
courseRecordSubmissions.revisionShort                            = Ver.
courseRecordSubmissions.score                                    = Score
courseRecordSubmissions.scored                                   = Scored
courseRecordSubmissions.scoresBest                               = In this course the best submission to each exercises scores.
courseRecordSubmissions.scoresLast                               = In this course the latest submission to each exercises scores.
courseRecordSubmissions.successDeletion                          = Submission was deleted successfully.
courseRecordSubmissions.unreadComments                           = Unread Comments

courseStatistics.begun                               = Begun
courseStatistics.buttonDeleteTestSubmission          = Delete Test Submissions
courseStatistics.comments                            = Comments
courseStatistics.groupByVersion                      = Group by Version
courseStatistics.isExited                            = Finished
courseStatistics.isExited.falseToolTip               = This submission is still ongoing. The student can still submit assignments.
courseStatistics.isExited.trueToolTip                = This submission is finished. The student can no longer submit assignments.
courseStatistics.lastVisited                         = Last Visited
courseStatistics.noDataAvailable                     = No submission data is yet available for the selected course.
courseStatistics.valueNotAvailableForTestSubmissions = This value is not available for test submissions.

courseTest.backToCourse = Back to Course

deletionDialog.button.cancel = Cancel
deletionDialog.button.delete = Delete

development.exerciseAdded  = The sample exercise was inserted to {0}'s personal folder.
development.exercisesAdded = The sample exercises were inserted to {0}'s personal folder.

enrollmentLogDialog.columnAction                      = Action type
enrollmentLogDialog.columnAction.automaticAction      = Automatic action by the system
enrollmentLogDialog.columnAction.manualActionLecturer = Manually done by lecturer
enrollmentLogDialog.columnAction.manualActionReason   = Reason
enrollmentLogDialog.columnAction.manualActionStudent  = Manually done by student
enrollmentLogDialog.columnAction.manualActionYou      = Performed by you
enrollmentLogDialog.columnExplanation                 = Reason
enrollmentLogDialog.columnStatus                      = Status
enrollmentLogDialog.columnTimestamp                   = Entered on
enrollmentLogDialog.current                           = current
enrollmentLogDialog.title                             = Enrollment history
enrollmentLogDialog.titleForLecturers                 = Enrollment log for 

enum.ECourseContentType.CHOOSE_FOLDER                = Folder Based
enum.ECourseContentType.CHOOSE_FOLDER.hint           = All exercises in the selected folders and all subfolders are added to the course. When new exercises are added to the folder, they are also automatically added.
enum.ECourseContentType.FIXED_ALLOCATION             = Fixed Allocation
enum.ECourseContentType.FIXED_ALLOCATION.hint        = Certain exercises are assigned to the course. If new exercises are added to the corresponding folder, they are not automatically taken over.
enum.ECourseContentType.RULE_BASED                   = Rule Based
enum.ECourseExerciseOrder.ALPHABETIC_ASCENDING       = Alphabet (Ascending)
enum.ECourseExerciseOrder.ALPHABETIC_DESCENDING      = Alphabet (Descending)
enum.ECourseExerciseOrder.DIFFICULTY_ASCENDING       = Difficulty (Ascending)
enum.ECourseExerciseOrder.DIFFICULTY_DESCENDING      = Difficulty (Descending)
enum.ECourseExerciseOrder.MANUAL                     = Manual
enum.ECourseExerciseOrder.MANUAL.hint                = You can determine the order of the exercises yourself by moving the rows.
enum.ECourseExerciseOrder.NUMBER_OF_SUBMISSIONS      = Number of Submissions
enum.ECourseExerciseOrder.NUMBER_OF_SUBMISSIONS.hint = Exercises for which no or fewer submissions have yet been made appear higher up. This sorting is only displayed to students.
enum.ECourseExerciseOrder.POINTS_ASCENDING           = Points (Ascending)
enum.ECourseExerciseOrder.POINTS_DESCENDING          = Points (Descending)
enum.ECourseNavigation.ADAPTIVE                      = adaptive
enum.ECourseNavigation.FREE                          = free
enum.ECourseNavigation.LINEAR                        = linear
enum.ECourseOfferReviewMode.AFTER_END                = After last possible submission
enum.ECourseOfferReviewMode.AFTER_EXIT               = After course was finished
enum.ECourseOfferReviewMode.AFTER_REVIEW             = After manual activation
enum.ECourseOfferReviewMode.ALWAYS                   = Always
enum.ECourseOfferReviewMode.NEVER                    = Never
enum.ECourseOrder.DEADLINE_ASC                       = Deadline
enum.ECourseOrder.LAST_VISIT_DESC                    = Last visit
enum.ECourseOrder.NAME_ASC                           = Name
enum.ECourseOrder.START_TIME_DESC                    = Start time
enum.ECourseScoring.BEST                             = Best submission per exercise
enum.ECourseScoring.LAST                             = Latest submission per exercise
enum.EEnrollmentStatus.DISENROLLED                   = Disenrolled
enum.EEnrollmentStatus.DISENROLLED_OR_NOT_ENROLLED   = Disenrolled / not yet enrolled
enum.EEnrollmentStatus.ENROLLED                      = Enrolled
enum.EEnrollmentStatus.ON_WAITINGLIST                = On waiting list
enum.EEnrollmentStatus.long.DISENROLLED              = You are disenrolled.
enum.EEnrollmentStatus.long.ENROLLED                 = You are enrolled.
enum.EEnrollmentStatus.long.ON_WAITINGLIST           = You are on the waiting list.
enum.EResultDisplay.BOTH                             = Average points and feedback text
enum.EResultDisplay.NONE                             = None
enum.EResultDisplay.POINTS                           = Average points only
enum.EResultDisplay.TEXT                             = Feedback text only
enum.EStageHintMalus.CUT_ACTUAL                      = Decrease of actual points
enum.EStageHintMalus.CUT_MAXIMUM                     = Decrease of possible points
enum.ESubmissionStatus.COMPLETED                     = Completely processed
enum.ESubmissionStatus.NOT_STARTED                   = Not&nbsp;yet started
enum.ESubmissionStatus.PARTLY_PROCESSED              = Partly processed
enum.ESubmissionStatus.STARTED_UNPROCESSED           = Started, unprocessed
enum.EvaluatorShellRepresentation.LATEX              = LaTeX
enum.EvaluatorShellRepresentation.STRING             = String

error.didntSave = Please save the course, before trying to download the resource! 

evaluator.evaluate            = Evaluate
evaluator.expression          = Expression
evaluator.expressionAndDomain = Evaluator expression and domain
evaluator.optionalExpression  = Evaluator rule (optional)
evaluator.shell               = Evaluator Shell
evaluator.shell.time          = Response Time

exception.EnrollmentException.ALREADY_ENROLLED               = You are already enrolled.
exception.EnrollmentException.COURSE_IS_FULL                 = There are no free places left.
exception.EnrollmentException.COURSE_NOT_FULL                = The course has free places left.
exception.EnrollmentException.DISENROLLMENT_DEADLINE_ELAPSED = The disenrollment period has expired.
exception.EnrollmentException.EMAIL_COULD_NOT_BE_SENT        = It was not possible to send you an email for your enrollment.
exception.EnrollmentException.ENROLLMENT_DEADLINE_ELAPSED    = The enrollment period has expired.
exception.EnrollmentException.ENROLLMENT_NOT_STARTED         = Enrollment has not yet started.
exception.EnrollmentException.MISSING_RIGHT                  = You do not have the necessary rights.
exception.EnrollmentException.NOT_ENROLLED                   = You are not enrolled.
exception.EnrollmentException.PASSWORD_WRONG                 = The entered password was not correct.
exception.EnrollmentException.WAITINGLIST_DISABLED           = The waiting list is deactivated for this course.
exception.EnrollmentException.alreadyEnrolledLecturer        = This user is already enrolled.
exception.LinkedCourseException                              = You are already enrolled in the course "{0}".
exception.LinkedCourseExceptionLecturer                      = This user is already enrolled in the course "{0}".
exception.PasswordRequiredException                          = A password is required for this action.
exception.SubmissionException.ALREADY_PARTICIPATED           = You have already participated in this course, further participation is not allowed.
exception.SubmissionException.NOT_ENROLLED                   = You are not enrolled.
exception.SubmissionException.NO_COURSE                      = This course is not submittable.
exception.SubmissionException.NO_OPEN_COURSE_RECORD          = There is no open submission.
exception.SubmissionException.OPEN_COURSE_RECORD             = There is already an ongoing submission.
exception.SubmissionException.PASSWORD_WRONG                 = The entered password was not correct.
exception.SubmissionException.SUBMISSION_DEADLINE_ELAPSED    = The submission period has expired.
exception.SubmissionException.SUBMISSION_NOT_STARTED         = Submission has not yet started.
exception.actionFailed                                       = Performing this action failed!
exception.actionNotAllowed                                   = This action is not permitted!
exception.actionNotAllowed.noExtendedReadRight               = You do not have the necessary rights to filter for participants of this course offer.
exception.actionNotAllowed.noRightsDiscardChanges            = You do not have the necessary rights to make these changes. All changes will be discarded.

exerciseEdit.addHint                                    = Add Hint
exerciseEdit.addImageOrLink                             = Add image or download link
exerciseEdit.addTransitionTarget                        = Add Target
exerciseEdit.allowSkip                                  = Allow to Skip
exerciseEdit.author                                     = Author
exerciseEdit.blankCondition                             = - Enter Condition -
exerciseEdit.blankHint                                  = - Enter Hint -
exerciseEdit.cancel                                     = Cancel
exerciseEdit.cas                                        = CAS
exerciseEdit.checker                                    = Checker
exerciseEdit.checkerConfigurationWeight                 = Weight of this check
exerciseEdit.choose                                     = choose
exerciseEdit.competenciesRelationships                  = References to Competencies
exerciseEdit.condition                                  = Condition
exerciseEdit.copy                                       = Duplicate Subtask
exerciseEdit.createJSXGraph                             = Create new JSXGraph
exerciseEdit.createVariable                             = Create new variable
exerciseEdit.defaultTransition                          = Next Subtask (Default Case)
exerciseEdit.delete                                     = Delete Subtask
exerciseEdit.description                                = Description
exerciseEdit.difficulty                                 = Grade of Difficulty
exerciseEdit.difficultyOutOfRange                       = Grade of difficulty must be between 0 and 100.
exerciseEdit.editStage                                  = Edit Subtask
exerciseEdit.emptyTag                                   = No empty tag can be added.
exerciseEdit.endStage                                   = End of Exercise
exerciseEdit.evaluator                                  = Evaluator
exerciseEdit.exerciseNavigationError                    = An error occurred while navigating to the previous/next exercise.
exerciseEdit.exerciseStages                             = Exercise Subtasks
exerciseEdit.externalStageName                          = Title (external)
exerciseEdit.fileReplacePlaceholders                    = Replace variables in file contents
exerciseEdit.fileReplacePlaceholders.hint               = This function only works properly if file contents are encoded in UTF-8.
exerciseEdit.fillIn.addCorrectAnswerRule                = Add Correct Answer Rule
exerciseEdit.fillIn.addDropDownField                    = Add Drop-Down Field
exerciseEdit.fillIn.addFeedbackRule                     = Add Feedback Rule
exerciseEdit.fillIn.addFillInField                      = Add Fill-In Field
exerciseEdit.fillIn.answerOption                        = Answer
exerciseEdit.fillIn.answerOptions                       = Answer Options
exerciseEdit.fillIn.correctAnswerText                   = Correct Answer Text
exerciseEdit.fillIn.dropDownField                       = Drop-Down Field
exerciseEdit.fillIn.dropDownFieldName                   = Drop-Down Field Name
exerciseEdit.fillIn.dropDownFieldRandomize              = Randomize
exerciseEdit.fillIn.dropDownFields                      = Drop-Down Fields
exerciseEdit.fillIn.evaluatorRule                       = Evalutor Rule
exerciseEdit.fillIn.fieldAlreadyInEditor.details        = The Field is already in the task description.
exerciseEdit.fillIn.fieldAlreadyInEditor.summary        = Could not insert Field
exerciseEdit.fillIn.fillInField                         = Fill-In Field
exerciseEdit.fillIn.fillInFieldFormelEditorType         = Formular Editor
exerciseEdit.fillIn.fillInFieldName                     = Fill-In Field Name
exerciseEdit.fillIn.fillInFieldSize                     = Field Size
exerciseEdit.fillIn.fillInFields                        = Fill-In Fields
exerciseEdit.fillIn.formularEditorType.formularEditor   = Formular Editor
exerciseEdit.fillIn.insertFieldInEditor                 = Insert field in editor
exerciseEdit.fillIn.nameNotUnique                       = Name is in use.
exerciseEdit.fillIn.noDropDownFields                    = No Drop-Down fields have been defined yet.
exerciseEdit.fillIn.noFillInFields                      = No Fill-In fields have been defined yet.
exerciseEdit.fillIn.rulePointsOutOfRange                = Points must be between 0 and 100.
exerciseEdit.fillIn.sizeNotCorrect                      = The field size must be between 1 and 100
exerciseEdit.fillIn.terminal                            = Terminal
exerciseEdit.fillIn.terminalLabel                       = Do not process further rules on match
exerciseEdit.firstCharacterLetter                       = First character must be a letter.
exerciseEdit.forbiddenExercise                          = You do not have the permission to edit this exercise!
exerciseEdit.frozenTitle                                = Title for Frozen Version
exerciseEdit.frozenVersion                              = Frozen Version
exerciseEdit.gradePoints                                = Grade Points
exerciseEdit.hintMalus                                  = Grade Penalty for Hints
exerciseEdit.hintMalusOutOfRange                        = The prozentual malus Points must be between 0 and 100.
exerciseEdit.hintText                                   = Hint Text
exerciseEdit.id                                         = Id
exerciseEdit.internalDescription                        = Internal Description
exerciseEdit.internalStageName                          = Name (internal)
exerciseEdit.isStartStage                               = Start
exerciseEdit.jSXGraphHeight                             = Field Height
exerciseEdit.jSXGraphInputText                          = JSXGraph Text
exerciseEdit.jSXGraphWidth                              = Field Width
exerciseEdit.java.addGreqlConfig                        = Add static check
exerciseEdit.java.addMetricsConfig                      = Add software metrics
exerciseEdit.java.addTracingConfig                      = Add dynamic check
exerciseEdit.java.checkers                              = Checker modules
exerciseEdit.java.checkers.GreqlGradingConfig           = static
exerciseEdit.java.checkers.MetricsGradingConfig         = metrics
exerciseEdit.java.checkers.TracingGradingConfig         = dynamic
exerciseEdit.java.classesToTrace                        = Classes to trace
exerciseEdit.java.config.fileNames                      = Relevant uploaded source code files (one file name per line)
exerciseEdit.java.config.libraryFiles                   = Additional library files (jar files)
exerciseEdit.java.config.sourceFiles                    = Additional source code files from the exercise
exerciseEdit.java.deleteGraderConfig                    = Delete this check
exerciseEdit.java.fileSettings                          = Files used in this check
exerciseEdit.java.greqlRules                            = GReQL rule set for static check
exerciseEdit.java.handleUploadErrors                    = Handling of missing or wrong files
exerciseEdit.java.handleUploadErrors.fail               = Assign 0 points to submission
exerciseEdit.java.handleUploadErrors.repeat             = Repeat stage
exerciseEdit.java.ignorePendingChecks                   = Do not wait for feedback and proceed with next stage immediately.
exerciseEdit.java.propagateInternalErrors               = Behaviour in case of internal errors during the checks
exerciseEdit.java.propagateInternalErrors.false         = Show message and keep submission active
exerciseEdit.java.propagateInternalErrors.true          = Annotate and close submission
exerciseEdit.java.testDriver                            = Test driver for dynamic tests
exerciseEdit.java.tracingCheckerTimeout                 = Timeout (seconds)
exerciseEdit.java.uploadFileSettings                    = Setting for file uploads
exerciseEdit.java.uploadFileSettings.allowedFileNames   = Allowed file names (one per line):
exerciseEdit.java.uploadFileSettings.mandatoryFileNames = Mandatory file names (one per line):
exerciseEdit.java.uploadFileSettings.maximum            = Maximal number of attached files
exerciseEdit.java.uploadFileSettings.minimum            = Minimal number of attached files
exerciseEdit.jsxGraphConfiguration                      = JSXGraph Configuration
exerciseEdit.language                                   = Language
exerciseEdit.mc.addFeedbackOption                       = Add Feedback Option
exerciseEdit.mc.answer                                  = Answer
exerciseEdit.mc.answerOptions                           = Answer Options
exerciseEdit.mc.correct                                 = Is Correct
exerciseEdit.mc.correctAnswerFeedback                   = Feedback for Correct Answer
exerciseEdit.mc.defaultFeedback                         = Feedback for Wrong Answer (Default Case)
exerciseEdit.mc.extraFeedbacks                          = More Feedbacks (optional)
exerciseEdit.mc.missingAnswerOptions                    = No answer options available. Add them via the 'Content' tab.
exerciseEdit.mc.moreSettings                            = More Settings
exerciseEdit.mc.noAnswerOptions                         = No answer options have been defined yet.
exerciseEdit.mc.noExtraFeedbacks                        = No feedback options have been defined yet.
exerciseEdit.mc.pattern                                 = Answer Pattern
exerciseEdit.mc.shuffleAnswerOptions                    = Shuffle Answer Options for Display
exerciseEdit.mc.singleChoice                            = Display in Single Choice Mode
exerciseEdit.mc.ticked                                  = Ticked
exerciseEdit.mc.ticked.chooseVariable                   = Choose a variable
exerciseEdit.mc.ticked.dontcare                         = Don't care
exerciseEdit.mc.ticked.no                               = No
exerciseEdit.mc.ticked.variable                         = Variable
exerciseEdit.mc.ticked.yes                              = Yes
exerciseEdit.molecule.correctAnswerFeedback             = Feedback for correct answers
exerciseEdit.molecule.errorFeedback                     = Feedback for incorrect answers
exerciseEdit.molecule.expectedAnswer                    = Expected answer
exerciseEdit.name                                       = Name
exerciseEdit.newTag                                     = New Tag
exerciseEdit.newVariable                                = New Variable
exerciseEdit.noExerciseResources                        = No resource files have been uploaded.
exerciseEdit.noExerciseStages                           = No exercise Subtasks have been defined yet.
exerciseEdit.noExternalStageName                        = No external Subtask name
exerciseEdit.noFileDescription                          = No file description
exerciseEdit.noJSXGraphs                                = No JSXGraph fields have been defined yet.
exerciseEdit.noSkipTransitions                          = No further targets have been defined yet.
exerciseEdit.noStageHints                               = No hints have been defined yet.
exerciseEdit.noStageTransitions                         = No further targets have been defined yet.
exerciseEdit.noSubjectSelection                         = No subject has been selected yet.
exerciseEdit.noVariables                                = There are no variables defined.
exerciseEdit.options                                    = Subtask Options
exerciseEdit.publicDescription                          = Public Description
exerciseEdit.publicLink                                 = Public Link
exerciseEdit.publicLink.info                            = <p>User can access the exercise (edit page of exercise/course and submission of course offer) via this link, as far as they have access. </p>
exerciseEdit.python.addGreqlConfig                      = Add static check
exerciseEdit.python.addTracingConfig                    = Add dynamic check
exerciseEdit.python.config.libraryFiles                 = Additional library files
exerciseEdit.python.config.sourceFiles                  = Additional source code files from the exercise
exerciseEdit.python.fileSettings                        = Files used in this check
exerciseEdit.python.greqlRules                          = GReQL rule set for static check
exerciseEdit.python.ignorePendingChecks                 = Do not wait for feedback and proceed with next stage immediately.
exerciseEdit.python.propagateInternalErrors             = Behaviour in case of internal errors during the checks
exerciseEdit.python.propagateInternalErrors.false       = Show message and keep submission active
exerciseEdit.python.propagateInternalErrors.true        = Annotate and close submission
exerciseEdit.python.testDriver                          = Test driver for dynamic tests
exerciseEdit.python.tracingCheckerStudentModule         = Module path for student code
exerciseEdit.python.tracingCheckerTimeout               = Timeout (seconds)
exerciseEdit.rStageCheckerMissing                       = No checkers are attached to an R-Subtask, the exercise cannot be used in this way!
exerciseEdit.removeTag                                  = Remove tag.
exerciseEdit.repeatStage                                = Repeat Subtask
exerciseEdit.revisionWarning                            = This is not the newest Version for this exercise!
exerciseEdit.rules                                      = Rules
exerciseEdit.savingFailed.detail                        = The Exercise could not be saved!<br /><br />There are invalid values.
exerciseEdit.savingFailed.summary                       = Saving failed
exerciseEdit.setAsStart                                 = Set as start Subtask
exerciseEdit.settings                                   = Settings
exerciseEdit.showAllWithTag                             = Show all exercises with this tag.
exerciseEdit.skipMessage                                = Feedback for Skipped Subtask
exerciseEdit.skipTransitions                            = Next Subtask for Skipped Subtask (optional)
exerciseEdit.stageContent                               = Content
exerciseEdit.stageEditMode                              = Subtask Edit Mode
exerciseEdit.stageFeedback                              = Feedback
exerciseEdit.stageFiles                                 = All files for this exercise
exerciseEdit.stageFilesSelection                        = Selected files for students
exerciseEdit.stageGraphHeader                           = Subtask Graph
exerciseEdit.stageHints                                 = Hints
exerciseEdit.stageTransitions                           = More optional next Subtasks
exerciseEdit.stageType                                  = Subtask Type
exerciseEdit.stageWeight                                = Subtask Weight
exerciseEdit.subject                                    = Subject
exerciseEdit.tagExists                                  = Tag name "{0}" already exists.
exerciseEdit.tags                                       = Tags
exerciseEdit.target                                     = Target Subtask
exerciseEdit.taskDescription                            = Task Description
exerciseEdit.templates                                  = Templates
exerciseEdit.test                                       = Check
exerciseEdit.title                                      = Title
exerciseEdit.toNewestRevision                           = To Latest Version
exerciseEdit.transitions                                = Subtask Links
exerciseEdit.uml.failOnMissingUpload                    = Assign 0 points to submissions without file.
exerciseEdit.uml.greqlRules                             = GReQL rule set for static check
exerciseEdit.uml.handleMissingUpload                    = Handling of missing files
exerciseEdit.uml.ignorePendingChecks                    = Do not wait for feedback and proceed with next Subtask immediately.
exerciseEdit.uml.propagateInternalErrors                = Behaviour in case of internal errors during the checks
exerciseEdit.uml.propagateInternalErrors.false          = Show message and keep submission active
exerciseEdit.uml.propagateInternalErrors.true           = Annotate and close submission
exerciseEdit.uml.repeatOnMissingUpload                  = Repeat Subtask in case no file is submitted.
exerciseEdit.updateVariable                             = Add Update Line
exerciseEdit.updateVariableName                         = Update for Variable
exerciseEdit.user                                       = User
exerciseEdit.valid                                      = Technical Valid
exerciseEdit.validate                                   = Validate
exerciseEdit.variableConfiguration                      = Variables Configuration
exerciseEdit.variableEdit                               = Variable Edit
exerciseEdit.variableInitializationCode                 = Variable Initialization Code
exerciseEdit.variableType                               = Variable Type
exerciseEdit.variableUpdates                            = Update of Variables
exerciseEdit.variableUpdatesAfterCheck                  = Variable Updates After Performing All Checks
exerciseEdit.variableUpdatesBeforeCheck                 = Variable Updates Before Performing Any Checks
exerciseEdit.variableUpdatesOnEnter                     = Variable Updates Before Subtask is Displayed
exerciseEdit.variableUpdatesOnNormalExit                = Variable Updates Before Subtask is Left Without Repetition or Skipping
exerciseEdit.variableUpdatesOnRepeat                    = Variable Updates Before Subtask is Left for Repetition
exerciseEdit.variableUpdatesOnSkip                      = Variable Updates Before Subtask is Left by Skipping
exerciseEdit.waitLoading                                = Please wait. Loading exercise...
exerciseEdit.wrongFileExtension                         = The file-extension of the uploaded file must match the extension of the replaced file.

exerciseEditView.idDoesNotExist    = Exercise ID does not exist.
exerciseEditView.idDoesNotExistMsg = An exercise with ID {0} does not exist.
exerciseEditView.jsxGraphExists    = A JSXGraph with the name {0} already exists.
exerciseEditView.varExists         = A variable with the name {0} already exists.

exercisePlayer.ajaxPending                        = One Moment please ...
exercisePlayer.automaticResult                    = Automatic result
exercisePlayer.automaticResultOverwritten         = (overwritten by manual feedback)
exercisePlayer.checkDetailsDialog                 = Result Log
exercisePlayer.checksPending                      = The system currently evaluates your submission. Please wait until the evaluation is completed.
exercisePlayer.completed                          = Exercise has finished.
exercisePlayer.computing                          = Computing...
exercisePlayer.consoleHeader                      = Console Output
exercisePlayer.consoleResponseTimeout             = Testing code timed out after 30s!
exercisePlayer.currentScore                       = Current Score
exercisePlayer.eraseSubmission                    = Start Over From Here
exercisePlayer.eraseSubmission.header             = Start over from that Subtask?
exercisePlayer.eraseSubmission.question           = If you start over from that Subtask, any points rewarded so far for that Subtask and any subsequent Subtask will be discarded.
exercisePlayer.fatalError                         = An error occured and we cannot continue to display this exercise properly.
exercisePlayer.fullLog                            = Log from working on this submission
exercisePlayer.hint                               = Hint
exercisePlayer.hints                              = Hints
exercisePlayer.java.allowedFileNames              = Allowed file names are
exercisePlayer.java.expectedFiles                 = {0} files are expected.
exercisePlayer.java.mandatoryFileNames            = Mandatory files are
exercisePlayer.latestVariableAssignment           = Current Variable Assignment
exercisePlayer.manualFeedback.createdBy           = Set by
exercisePlayer.manualFeedback.description         = You can give a manual feedback to this subtask submission. It will be displayed instead of the automatic result and will overwrite the score.
exercisePlayer.manualFeedback.enable              = Enable manual feedback for this submission
exercisePlayer.manualFeedback.internalComment     = Internal comments (only visible for lecturers)
exercisePlayer.manualFeedback.oldResult           = Original result (overwritten by manual feedback)
exercisePlayer.manualFeedback.points              = Score
exercisePlayer.manualFeedback.publicComment       = Feedback for students
exercisePlayer.manualFeedback.showAutomaticResult = Keep automatic generated feedback
exercisePlayer.manualFeedback.title               = Manual feedback
exercisePlayer.manualResult                       = Manual result
exercisePlayer.noVariables                        = No variables available at this time.
exercisePlayer.onlyForLecturers                   = This content is only visible to users with lecturer rights for this exercise.
exercisePlayer.outdatedRevisionMessage            = The exercise has been updated in the background. Please go back to the overview and restart the exercise.
exercisePlayer.outdatedRevisionTitle              = Exercise outdated
exercisePlayer.pastDeadlineMessage                = The submission deadline for the course was reached.
exercisePlayer.pastDeadlineTitle                  = Submission too late
exercisePlayer.pointsReductionNotice              = Originally {0} percentage points were reduced due to the given hints.
exercisePlayer.preVariableHint.var                = Variables defined in the exercise. The displayed value reflects the state when entering the stage.
exercisePlayer.preVariablesAssignment             = Variable assignment when entering this stage
exercisePlayer.showFeedbackDetails                = Show further details
exercisePlayer.skip                               = Skip
exercisePlayer.stageResourcesDownload             = Downloads for this subtask
exercisePlayer.submissionDetailsDialog            = Details from submission
exercisePlayer.submit                             = Submit
exercisePlayer.testCodeBtn                        = Test code
exercisePlayer.upload.fileLimitMessage            = You have already selected the maximum amount of files for submission.
exercisePlayer.variableHint.input                 = Variables that contain input provided by students as well as additional data created during grading. The variables are empty unitl a submission is made.
exercisePlayer.variableHint.meta                  = Variables that are automatically set by the system and can be used without declaration. The displayed value is always the most current value within the Subtask.
exercisePlayer.variableHint.var                   = Variables defined in the exercise. The displayed value reflects the state when entering the Subtask.
exercisePlayer.variablesAssignment                = Variable Assignment

exerciseSubmissionView.forbiddenExercise = You need read rights to view the submissions!

exerciseSubmissions.deleteAllSubmissions         = Delete All Test-Submissions
exerciseSubmissions.deleteAllSubmissions.message = {0} test-submissions will be deleted. Submissions which belong to a course- or courseOffer-submission are not deleted. This cannot be undone. Are you sure?
exerciseSubmissions.fileName                     = Submissions
exerciseSubmissions.forRevision                  = For Version
exerciseSubmissions.groupByVersion               = Group by Version
exerciseSubmissions.internalError                = Internal Error
exerciseSubmissions.listOfSubmissions            = List of All Submissions
exerciseSubmissions.notCompleted                 = Exercise not completed
exerciseSubmissions.pendingChecks                = Pending checks
exerciseSubmissions.reviewedManually             = Reviewed manually
exerciseSubmissions.testSubmission               = Testsubmission
exerciseSubmissions.timestamp                    = Timestamp

exerciseTest.backToExercise = Back to Exercise
exerciseTest.lecturerView   = Lecturer View

global.actions                                 = Actions
global.activate                                = Activate
global.add                                     = Add
global.adminDialog                             = Create admin account
global.administration                          = Administration
global.all                                     = All
global.alterationTime                          = Time of change
global.and                                     = and
global.answer                                  = - Answer  {0} -
global.atLeast                                 = at least
global.atMost                                  = at most
global.author                                  = Author
global.available                               = Available
global.back                                    = Back
global.backToExercise                          = Back to exercise
global.backToStart                             = Back to start page
global.cancel                                  = Cancel
global.changedBy                               = Author
global.close                                   = Close
global.code                                    = Code
global.competence                              = Competence
global.competenceDimension                     = Competence-Dimension
global.configuration                           = Configuration
global.confirm                                 = Confirm
global.continue                                = Continue
global.cookieWarn                              = You must accept cookies to use JACK. 
global.copyToClipboard                         = Copy to clipboard
global.count                                   = Count
global.course                                  = Course
global.courseInfos                             = Course Informations
global.courseOffer                             = Course Offer
global.courseRecordDetails                     = Course Record Details
global.courses                                 = Courses
global.create                                  = Create
global.currentCourseRecord                     = Current Course Record
global.currentResults                          = Current Results
global.currentVersion                          = Current version
global.delete                                  = Delete
global.deletionInfoCourseTestSubmission        = This submission is a test submission for a course.\r\nFor deletion, please go to the associated course.
global.deletionInfoNoRights                    = You havent got the requiered rights.
global.deletionInfoStudentSubmission           = This submission is a student submission for a courseOffer. \r\nFor deletion, please go to the associated courseOffer.
global.description                             = Description
global.details                                 = Details
global.discard                                 = Discard
global.domain                                  = Domain
global.download                                = Download
global.downloadAsCsv                           = Download as CSV
global.downloadAsXslx                          = Download as XSLX
global.email                                   = Email
global.error                                   = Error
global.errorMessage                            = This action could not be carried out. An error has occurred.
global.exercise                                = Exercise
global.exerciseLink                            = Public link to exercise: 
global.exercises                               = Exercises
global.explorer                                = Explorer
global.feedback                                = Feedback
global.file                                    = File
global.fileUploadedByUser                      = uploaded by
global.filename                                = File Name
global.files                                   = Files
global.filter                                  = Filter
global.firstTimeSetupAccount                   = Create admin account
global.firstTimeSetupServers                   = Configure remote services
global.folder                                  = Folder
global.forbidden                               = You do not have permission to view this page.
global.freezeRevision                          = Freeze version
global.frozenViewExplanationMessage            = You are looking at a frozen version.<br/>Frozen versions are a copy of a version (<b>here corresponding to version {0}</b>) and are used for traceability.<br />You can only view this frozen version or define an additional name for it (e.g. Exam WS 30/31).
global.functionNotImplementedYet               = This function is currently not implemented.
global.home                                    = Home
global.id                                      = ID
global.import                                  = Import
global.info                                    = Info
global.information                             = Information
global.invalidInput                            = Input not valid
global.invalidName                             = Invalid name
global.invalidName.duplicateContentFolder      = A folder with this name already exists.
global.invalidName.duplicateCourse             = A course with this name already exists.
global.invalidName.duplicateCourseOffer        = A course offer with this name already exists.
global.invalidName.duplicateExercise           = An exercise with this name already exists.
global.invalidName.duplicatePresentationFolder = A folder with this name already exists.
global.invalidName.duplicateResource           = A Resource with this name already exists.
global.invalidName.empty                       = Name must not be empty.
global.jsWarn                                  = You have to activate Javascript to use JACK.
global.key                                     = Key
global.lastSubmission                          = Time for Last Submission
global.lastSubmissionNotProvided               = No time provided
global.legend                                  = Legend
global.licenseInformation                      = License Information
global.login                                   = Login
global.logout                                  = Logout
global.max                                     = max.
global.minutes                                 = Minutes
global.modus                                   = Mode
global.myAccount                               = My Account
global.name                                    = Name
global.never                                   = Never
global.no                                      = No
global.none                                    = none
global.noneFem                                 = none
global.noneSelected                            = None selected
global.notAvailable.long                       = not available
global.notAvailable.short                      = n/a
global.ok                                      = OK
global.onlyLetterNumberUnderscore              = Only letters, numbers and underscore are allowed.
global.password                                = Password
global.path                                    = Path
global.point                                   = Point
global.points                                  = Points
global.pointsOf                                = {0} of {1}
global.preventUnloadMessage                    = There are unsaved Changes. Do you still want to leave the page?
global.privacy                                 = Privacy
global.profile                                 = To your profile
global.profileField                            = Profile Field
global.profileFields                           = Profile Fields
global.pseudonym                               = Pseudonym
global.pseudonymShown                          = Since you do not have extended read permissions on this folder, user names are pseudonymized.
global.referencesToCompetencies                = References to Competencies
global.register                                = Register
global.remove                                  = Remove
global.repeatPassword                          = Repeat password
global.replace                                 = Replace
global.required                                = This field is required.
global.reset                                   = Reset
global.result                                  = Result
global.resultAbbreviate                        = Res.
global.retry                                   = Retry
global.revision                                = Version
global.revisionNumber                          = Version Number
global.revisionViewExplanationMessage          = You are viewing an older version (<b>version {0}</b>).<br/>Versions save the history of changes.<br />You can only view this version or accept it as a new version of the exercise.
global.rights.extRead                          = Ext. read
global.rights.read                             = Read
global.rights.write                            = Write
global.save                                    = Save
global.score                                   = Score
global.score.best                              = Best Score
global.score.last                              = Last Score
global.score.total                             = Total
global.search                                  = Search
global.select                                  = Select
global.settings                                = Settings
global.size                                    = Size
global.sortBy                                  = Sort by
global.stageType.FillInStage                   = FillIn
global.stageType.JavaStage                     = Java
global.stageType.MCStage                       = Multiple Choice
global.stageType.MoleculeStage                 = Molecule
global.stageType.PythonStage                   = Python
global.stageType.RStage                        = R
global.stageType.UmlStage                      = UML
global.status                                  = Status
global.subcompetence                           = Subcompetence
global.subject                                 = Subject
global.success                                 = Successful
global.summary                                 = Summary
global.takeOver                                = Accept as New
global.testAndSave                             = Save & Check
global.timelimit                               = Timelimit
global.timelimitNotProvided                    = No timelimit provided
global.timestamp                               = Timestamp
global.toLogin                                 = Back to main
global.type                                    = Type
global.update                                  = Update
global.upload                                  = Upload
global.uploadTimestamp                         = created
global.user                                    = User
global.usergroup                               = User Group
global.username                                = Username
global.usernameInvalid                         = Invalid login. You can use letters, digits, commas, dots, minus and the @-sign.
global.value                                   = Value
global.versions                                = Versions
global.view                                    = View
global.warn                                    = Warning
global.welcome                                 = Welcome
global.yes                                     = Yes

importExerciseDialog.description   = Here you can import <ul>\r\n\u0009\u0009<li> JACK3 exercixe exports (as XML file) </li>\r\n\u0009\u0009<li> JACK3 folder exports (as a zip file) </li>\r\n\u0009\u0009<li> JACK2 exercise exports (as Zip file) </li>\r\n</ul> Please note that a complete conversion of JACK2 exercises is technically not always possible. Therefore, you must always check for correct functionality after importing! <br/>
importExerciseDialog.importFailed  = Import failed!
importExerciseDialog.occurredError = Occurred error

license.caption0 = JACK License
license.caption1 = Contained third-party software

loginView.alreadyLoggedIn    = You''re alread logged in as {0}. Please logout to login with a different identity.
loginView.loginFailedDetail  = Login failed with the provided username and password.
loginView.loginFailedSummary = Login failed
loginView.registrationHint   = New to JACK? <a href="{0}">Create an account</a>.
loginView.retrievalHint      = Did you <a href="{0}">forget your password</a>?

mcStage.patternAlreadyInUse = Feedbackpattern is already defined.
mcStage.patternError        = Pattern Error

missingConfiguration.ace.detail      = Configure "{0}" to point to your ACE installation.
missingConfiguration.ace.summary     = ACE is not configured!
missingConfiguration.mathJax.detail  = Configure "{0}" to point to your MathJax installation.
missingConfiguration.mathJax.summary = MathJax is not configured!

myaccount.changePassword  = Change Password
myaccount.emailChanged    = Your email was successfully changed.
myaccount.invalidMail     = is not a valid email.
myaccount.newPassword     = New Password
myaccount.noMatch         = Passwords didn't match.
myaccount.oldPassword     = Current Password
myaccount.passwordChanged = Your password was successfully changed.
myaccount.passwordError   = Password Error
myaccount.repeatPassword  = Confirm Password
myaccount.title           = User Preferences
myaccount.validationError = Validation Error
myaccount.wrongPassword   = Your current password was incorrect.

paginator.entries = entries
paginator.of      = of

passwordRetrieval.errorSummary         = Failed to reset the password.
passwordRetrieval.infoText             = Please enter your login name into the form below. JACK will send you an email with your new password.
passwordRetrieval.mailContent          = <p>Dear JACK user,</p>\n<p>You requested a new password. Please login with</p>\n<p><b>{0}</b></p>\n<p>Please also remeber to change your password as soon as possible.</p>\n<p>Kind regards,<br>the JACK Team</p>
passwordRetrieval.mailNotSentDetail    = Sending an email to the user's address failed.
passwordRetrieval.mailSubject          = Your new JACK password
passwordRetrieval.retrieve             = Reset Password
passwordRetrieval.succcessDetail       = An email with your new passwort was sent.
passwordRetrieval.succcessSummary      = Password reset
passwordRetrieval.userNotManagedDetail = The user's credentials are not managed by JACK.
passwordRetrieval.userUnknownDetail    = The user with the specified name does not exist.

privacy.caption0 = Data Privacy Statement
privacy.caption1 = Controller Information
privacy.caption2 = Purpose and Legal Basis of the Processing
privacy.caption3 = Data Processed and Data Storage Periods
privacy.caption4 = Right to Object and Other Rights
privacy.section1 = <p>This JACK server is operated by: University of Duisburg-Essen, Chair "Specification of Software Systems", Prof. Dr. Michael Goedicke, Gerlingstra\u00DFe 16, 45127 Essen, jack@paluno.uni-due.de</p>
privacy.section2 = <p>JACK is an electronic exercise and assessment system. Due to this purpose and the way the system is designed it is necessary to store and process personal data.</p><p>If you are using JACK in the context of a course, the organizer of that course can tell you more about the specific legal basis of the processing. According to Art. 6 Para. 1 Let. c and e of the GDPR this may or may not be the public interest in a proper and lawful conduction of exercises and exams as assumed by a school or university. According to Art. 6 Para. 1 Let. a of the GDPR it also may or may not be the case that the organizer of your course askes for your permission.</p><p>If you are using JACK on a voluntary basis (e.g. by trying out our demonstration version), this voluntary usage implies your permission in collecting and processing the data mentioned below in this statement.</p><p>In cases in which using JACK is not backed by responsibilities of public administration anyway, there is also a legitimate interest according to Art. 6 Para. 1 Let. f of the GDPR in collecting and processing data, as far as they are relevant to provide JACK in a secure and efficient manor. According to Art. 89 of the GDPR data collected by JACK can also be used for scientific research. Pseudonymisation or anonymisation is performed on the data in this case.</p>
privacy.section3 = <p>Meta and communication data (such as device information, IP-addresses) is collected from any JACK user. The necessity to collect this data arises from technical requirements and the legitimate interest to provide JACK in a secure and efficient manor. This kind of data is stored in log files on the server. This kind of data is not forwarded to any third party. This kind of data will be deleted after 12 month or earlier.</p><p>Usage data (such as a timestamp of a login) is collected from any JACK user who logs in into the system. The necessity to collect this data arises again from the legitimate interest to provide JACK in a secure and efficient manor. Moreover, this kind of data can be used to proof the proper conduction of exams. This kind of data is stored in log files on the server separate from the data mentioned above. This kind of data is not forwarded to any third party. This kind of data will be deleted after 12 month or earlier.</p><p>An account name is stored for any JACK user who logs in into the system. This name is necessary to have an unique identifier for each user. Depending on the context of your JACK usage, the account name may be an unique id coming from another system, a student id, or an arbitrary string of characters. If you access JACK through another system (such as Moodle) the name will be passed from that system. In any case you will be able to see your account name after logging in in the upper right corner above the main menu. The account name is connected to many action within the system (such as creating or answering an exercise). Hence it is visible to authorised users (such as teachers or administrators) in conjunction with other data. If authorised users export exercise or exam results, these exports will also contain account names. An account name is usually stored for an infinite period of time but can be deleted if all data connected to it has been deleted.</p><p>Usage data (such as timestamp and IP-address for a submission) and content data (such as an actual submission or a grade) are collected for any JACK user who creates content, e.g. by creating exercises or submissions. Storing and processing this data is the main purpose of this exercise and assessment system. This data may also be necessary to proof the proper and lawful conduction of exercises and exams. This data is visible to authorised used (such as teachers or administrators). If authorised users export exercise or exam results, these exports may contain chunks of this data. If you access JACK from another system (such as Moodle), chunks of this data (such as a grade) can also be transfered back to that system. This data is usually deleted after six month.</p>
privacy.section4 = <p>If you are using JACK in the context of a course, the organizer of that course is the right person to contact for any legal issues. In particular, you may contact that person to object against the processing or ask for data access, rectification or erasure of data.</p><p>If you are using JACK on a voluntary basis (e.g. by trying out our demonstration version), please mail to jack@paluno.uni-due.de for any legal issues. In particular, you may use this contact to object against the processing or ask for data access, rectification or erasure of data.</p><p>According to Art. 77 of the GDPR you also have the right to lodge a complaint with a supervisory authority.</p>

quickIdView.courseEdit       = Edit page of course:
quickIdView.courseOfferInfo  = You can view the course offers via the following links, but please note that you may generate <strong>real submissions and enrollments</strong>. If a course offer has a maximum number of participants, you take a up seat.
quickIdView.courseRecord     = In course offer:
quickIdView.exerciseEdit     = Edit page of the Exercise:
quickIdView.header           = Links to exercise
quickIdView.noExerciseExists = For the given id no exercise is found!
quickIdView.noLinksinfo      = You have options no to access the exercise. A possible reason could be missing rights.

rStage.checker.addNewTestCaseGroup                         = Add new Testcase Group
rStage.checker.dynamicTestcase                             = Dynamic Testcase
rStage.checker.editCheckerConfig                           = Checker Configuration
rStage.checker.staticTestcase                              = Static Testcase
rStage.checker.testcaseGroup                               = Testcase Group
rStage.checker.testcaseGroups                              = Testcase Groups
rStage.closeDontSave                                       = Close (don't save)
rStage.contentConfig.initialCode                           = Prefilled Code (variables will be replaced)
rStage.editCheckerConfigOverlay.externalName               = External Name
rStage.editCheckerConfigOverlay.feedbackVisibleForStudent  = Feedback Visible for Student?
rStage.editCheckerConfigOverlay.isActive                   = Is Activated?
rStage.editCheckerConfigOverlay.isAsync                    = Is Asynchronous?
rStage.editCheckerConfigOverlay.resultVisibleForStudent    = Result Visible for Student?
rStage.editCheckerConfigOverlay.title                      = Testcase Group Config
rStage.editCheckerConfigOverlay.variableName               = Name of Variable
rStage.editCheckerConfigOverlay.variableNameExplanation    = You can use the name of this variable in the Feedback tab to calculate the total score.
rStage.feedbackConfig.availableVariables                   = Available Variables:
rStage.feedbackConfig.evaluationRule                       = Evaluationrule
rStage.feedbackConfig.evaluationRuleExplanation            = The equation below determines how the final result points for this Subtask are calculated. You can use Evaluator syntax and the results of each testcase group are accessible through their checker variables name, e.g. '#{c234}'. If left empty, all results will be summed up (but between 0 and 100 in total)
rStage.feedbackConfig.evaluationRuleExplanationPlaceholder = E.g.: 0.8 * #{c123} + 0.2 * #{c234}
rStage.fileUploadSuccessful                                = {0} uploaded successfully.
rStage.input.codeTemplates                                 = Code Templates
rStage.input.userInput                                     = Input of The Answer
rStage.input.workSheets                                    = Worksheets
rStage.pointsMode                                          = Points mode
rStage.staticRuleMode                                      = Rule Type
rStage.testCaseOverlay.addQuery                            = Add rule
rStage.testCaseOverlay.addTestcase                         = Add testcase
rStage.testCaseOverlay.closeDontAdd                        = Close (don't add)
rStage.testCaseOverlay.edittestcase                        = Edit Testcase
rStage.testCaseOverlay.expectedOutput                      = Expected Output
rStage.testCaseOverlay.feedbackIfFailed                    = Feedback (if failed)
rStage.testCaseOverlay.postcode                            = Post code
rStage.testCaseOverlay.postprocessingFunction              = Postprocessing function
rStage.testCaseOverlay.postprocessingFunctionHelp          = If you specify a value here, the return of the student code is first passed through this function. This can be useful for some exercises if there are several different correct returns. Example: If the value "myParser" is specified here, it will not be compared to the internally generated function "studentInputAsFunc()", but to "myParser(studentInputAsFunc())". In this case the function must be defined in the postCode field!
rStage.testCaseOverlay.precode                             = Pre code
rStage.testCaseOverlay.query                               = GReQL Rule(s)
rStage.testCaseOverlay.tolerance                           = Tolerance (e^{...})
rStage.testCaseOverlay.updateTestcase                      = Update Testcase

registrationView.acceptanceRequired   = You must accept the privacy policy to register.
registrationView.emailTakenDetails    = This email address cannot be used.
registrationView.emailTakenSummary    = Email not available.
registrationView.invalidField         = Invalid value.
registrationView.invalidMail          = Invalid e-mail address.
registrationView.loginHint            = Already registered? <a href="{0}">Sign in</a>.
registrationView.mailNotSentDetails   = Your credentials could not be sent. Please try resetting your password or contact support.
registrationView.mailNotSentSummary   = Credentials not sent
registrationView.privacyPolicyConsent = I agree to the <a href="{0}">privacy policy</a>.
registrationView.register             = Create new account
registrationView.requiredField        = This field is required.
registrationView.requiredMail         = You have to provide an e-mail address.
registrationView.successDetails       = Your account was successfully created. The credentials were sent by mail.
registrationView.successSummary       = Account created

setup.adminNamePlaceholder = Choose Account Name
setup.eurekaServer         = Eureka server
setup.kafkaConsoleTopic    = Kafka console topic
setup.kafkaGroup           = Kafka group id
setup.kafkaServer          = Kafka server
setup.kafkaTopic           = Kafka topic
setup.useEureka            = This JACK server is supposed to include the basic capabilities to display and grade assessment items with multiple Subtasks.
setup.useKafka             = This JACK server is supposed to include also the extended capabilities to grade assessment items asychronously.

showCourseRecord.exitSubmission                             = Finish submission
showCourseRecord.exitSubmissionDialog.info                  = Your current submission will be finished and all submitted solutions are saved.
showCourseRecord.exitSubmissionDialog.noRestart             = Since this course does not allow a restart, you can only take the course once. Once you have completed it, you will not be able to make any further submissions.
showCourseRecord.passwordRequired                           = This course requires a password. Please authenticate with your personal password to access the assignments.
showCourseRecord.recordClosed                               = This submission is already closed.
showCourseRecord.redirectHeader                             = You have been redirected automatically
showCourseRecord.redirectInfo                               = The current course does not allow pauses. Hence you were redirected here automatically. Please click the button "Quit course" if you want to leave the course.
showCourseRecord.restartSubmission                          = Restart submission
showCourseRecord.restartSubmissionDialog.info               = You will now start a new submission. All previously submitted solutions are saved and reset.
showCourseRecord.restartSubmissionError.alreadyParticipated = You have already taken the course. The course does not allow repetition.
showCourseRecord.restartSubmissionError.submissionTime      = You are outside the submission period.

start.actionNotAllowed.unhandled.general                               = Action not possible
start.actionNotAllowed.unhandled.notSpecified                          = Message for cancelation not specified
start.confirmMoveOperation.loseManageRight                             = You have no managing right on the target folder and therefore cannot move the item back.
start.confirmMoveOperation.loseManageRightAndOwner                     = Due to the moving operation, the item changes its owner and you lose your managing rights. This prevents you from moving it back.
start.confirmMoveOperation.optionToDuplicate                           = You can duplicate the item instead.
start.confirmMoveOperation.ownerChanges                                = By moving this item the owner is changed.
start.course                                                           = Course
start.courseOffers                                                     = Available Courses
start.createCourse                                                     = Create New Course
start.createExercise                                                   = Create New Exercise
start.createFolder                                                     = Create New Folder
start.deadlineAt                                                       = Deadline at
start.deleteCourse                                                     = Delete this course
start.deleteCourse.question                                            = The course and all related course testsubmissions will be deleted. Are you sure to delete this course?
start.deleteCourseOffer                                                = Delete Course Offer
start.deleteCourseOffer.dialog.header                                  = Delete Course Offer
start.deleteCourseOffer.dialog.inputText.placeholder                   = Insert the Name of the Course Offer here
start.deleteCourseOffer.dialog.message1                                = You are about to delete a course offer. If the deletion is triggered, all associated enrollments and submissions will be irrevocably removed!
start.deleteCourseOffer.dialog.message2                                = In order to delete the course offer, please enter the exact name in the field below to confirm and click on the "Delete" button.
start.deleteCourseOffer.dialog.validatorErrorMessage                   = The inserted Name does not match the Title of the Course Offer
start.deleteCourseOffer.success                                        = Course Offer successfully deleted
start.deleteExercise                                                   = Delete this Exercise
start.deleteExercise.question                                          = Are you sure to delete this exercise?
start.deleteExercise.questionWithSubmissions                           = Are you sure to delete this exercis? {0} testsubmissions will be deleted. This cannot be undone.
start.deleteExercise.questionWithWithCourseFolderReferenced            = This excercise is referenced from following courses by folder allocation: {0}
start.deleteFolder                                                     = Delete This Folder
start.dragNotAllowed                                                   = Drag and drop not allowed.
start.dragNotAllowed.noFolder                                          = The target for dropping an element must be a folder.
start.dragNotAllowed.noSourceRights                                    = You do not have the necessary rights to move this element. FThis requires write permissions on the parent folder.
start.dragNotAllowed.noTargetRights                                    = You do not have the necessary write permissions on the target folder.
start.dragNotAllowed.personalFolder                                    = A personal folder cannot be moved.
start.dragNotAllowed.recursion                                         = The target folder must not be a sub-element of the dragged element.
start.dragNotAllowed.rightsWillChange                                  = This element has been shared with other people. You are not allowed to move the element because the move operation would change access rights of the other people. For this action, you need the managing right on the parent folder.
start.dragNotAllowed.virtualDropNode                                   = The target folder is not a valid target for dropping elements.
start.duplicateCourseButton                                            = Duplicate Course
start.duplicateExerciseButton                                          = Duplicate Exercise
start.duplicateFolderButton                                            = Duplicate Folder
start.duplicateNewName                                                 = New Name
start.editRights                                                       = Edit Permissions
start.emptyCourseGrid                                                  = You are currently not enrolled in any course.
start.exercise                                                         = Exercise
start.export                                                           = Export Exercise to XML
start.finishedAt                                                       = Finished at
start.folder                                                           = Folder
start.import                                                           = Import Exercise(s)
start.lastVisitAt                                                      = Last Visit
start.linkFolder                                                       = (un-)link Courses
start.linkFolderForbiddenParent                                        = Unlinking courses of this folder is not permitted, as this setting is taken from the parent folder {0}.
start.linkedFolderHint                                                 = Linked
start.linkedFolderHint.inherited                                       = implicitly parallel
start.linkedFolderHint.lecturer                                        = Students can only enrol for one course at a time within the folder.
start.linkedFolderHint.student                                         = You can only enrol for one course at a time within the folder.
start.missingEditRights                                                = Missing necessary Rights
start.missingEditRightsDetails                                         = The necessary rights to perform this action are missing.
start.missingEditRightsExercise                                        = You have no edit rights for the course exercises.
start.moveCourse                                                       = Move Course
start.moveCourseOffer                                                  = Move Course Offer
start.moveExercise                                                     = Move Exercise
start.moveFolder                                                       = Move Folder
start.myParticipations                                                 = My Participations
start.myWorkspace                                                      = My Workspace
start.new                                                              = New
start.newCourse                                                        = New Course
start.newCourseOffer                                                   = New Course Offer
start.newExercise                                                      = New Exercise
start.newFolder                                                        = New Folder
start.noOffers                                                         = There are currently no courses available.
start.openCourseRecord                                                 = Ongoing submission
start.presentation.allcourses                                          = All Courses
start.presentation.duplicateCourseOffer                                = Duplicate Course Offer
start.presentation.duplicateCourseOffer.noRightsForCourse              = You do not have read rights for the course "{0}", defined in this course offer. Therefore, the course will not be set.
start.presentation.filter                                              = Filter
start.presentation.mycourses                                           = My Editable Courses
start.presentation.showParticipantsData                                = Show participant data
start.presentation.tileview                                            = Tile
start.presentation.treeview                                            = Tree
start.presentation.view                                                = View
start.renameFolder                                                     = Rename This Folder
start.revisionHistory                                                  = Version History
start.showInternalDescriptions                                         = Internal Description
start.showTags                                                         = Tags
start.startedAt                                                        = Started
start.tiles                                                            = Tiles
start.tree                                                             = Tree

startContentTabView.actionNotAllowed.createCourse                      = Course not created
startContentTabView.actionNotAllowed.createCourse.insufficientRights   = The necessary rights to create this Course are missing.
startContentTabView.actionNotAllowed.createExercise                    = Exercise not created
startContentTabView.actionNotAllowed.createExercise.insufficientRights = The necessary rights to create this Exercise are missing.
startContentTabView.actionNotAllowed.createFolder                      = Folder not created
startContentTabView.actionNotAllowed.createFolder.insufficientRights   = The necessary rights to create this Folder are missing.
startContentTabView.actionNotAllowed.deleteCourse                      = Course not deleted
startContentTabView.actionNotAllowed.deleteCourse.insufficientRights   = The necessary rights to delete this Course are missing.
startContentTabView.actionNotAllowed.deleteExercise                    = Exercise not deleted
startContentTabView.actionNotAllowed.deleteExercise.insufficientRights = The necessary rights to delete this Exercise are missing.
startContentTabView.actionNotAllowed.deleteFolder                      = Folder not deleted
startContentTabView.actionNotAllowed.deleteFolder.insufficientRights   = The necessary rights to delete this Folder are missing.
startContentTabView.courseRemoved                                      = Course removed
startContentTabView.courseRemovedMsg                                   = Course "{0}" successfully removed.
startContentTabView.deleteTreeContents                                 = Delete contents
startContentTabView.deleteTreeContents.confirmation                    = Are you sure that you want to delete the following data <strong>irrevocable</strong>? </br>\r\n{0}
startContentTabView.deleteTreeContents.confirmationHeader              = Confirmation
startContentTabView.deleteTreeContents.deletionError                   = An error occurred while deleting {0}: {1}
startContentTabView.deleteTreeContents.info                            = Choose all elements for deletion.\r\n<br>\r\nElements which are not selectable, can not be deleted.\r\n\r\n
startContentTabView.deleteTreeContents.infoDetails                     = <h3>Deletion-Conditions:</h3>\r\nExercise can be deleted if:\r\n<ul>\r\n<li> You have Write-Rights on the exercise </li>\r\n<li> There are none or only Testsubmissions </li>\r\n<li> The exercise is not referenced by a course </li>\r\n</ul>\r\nCourses can be deleted if:\r\n<ul>\r\n<li> You have Write-Rights the course</li>\r\n<li> There are none or only Testsubmissions </li>\r\n<li> The course is not referenced by a courseOffer </li>\r\n</ul>\r\nFolders can be deleted if:\r\n<ul>\r\n<li> You have Write-Rights the folder</li>\r\n<li> The folder is empty or all elements in the folder can be deleted</li>\r\n<li> The folder is not the personal folder of a user</li>\r\n</ul>
startContentTabView.duplicateCourse.noRightsForEveryExercise           = You do not have read rights for every exercise in the course "{0}". Exercises without the necessary rights will not be present in the duplicated course.
startContentTabView.exerciseRemoved                                    = Exercise removed
startContentTabView.exerciseRemovedMsg                                 = Exercise "{0}" successfully removed.
startContentTabView.exportAllExercises                                 = Export all Exercises
startContentTabView.exportFailed                                       = Export not possible
startContentTabView.exportFailed.noExercises                           = There are no exercises that can be exported.
startContentTabView.folderRemoved                                      = Folder removed
startContentTabView.folderRemovedMsg                                   = Folder "{0}" successfully removed.
startContentTabView.import.defaultSummary                              = No files are uploaded.
startContentTabView.import.errorDetail                                 = The following errors occurrred in {0} of {1} exercises:
startContentTabView.import.errorSummary                                = Errors occurred in {0} of {1} exercises. Check the internal notes of the exercises for error messages.
startContentTabView.import.exceptionMsg                                = Errors occured while importing "{0}". Contact an administrator for support.
startContentTabView.import.failed                                      = Import not successful!
startContentTabView.import.failedMsg                                   = The import file "{0}" contains unknown or forbidden values.
startContentTabView.import.failure                                     = Import with errors!
startContentTabView.import.failureMsg                                  = Check the internal notes of the exercise "{0}" for error messages.
startContentTabView.import.success                                     = Import successful!
startContentTabView.import.successMsg                                  = Exercise "{0}" was imported successfully.
startContentTabView.import.successSummary                              = Import of {0} exercises was successful.
startContentTabView.import.suffix                                      = Suffix for imported exercises (optional):
startContentTabView.import.suffix.placeholder                          = e.g. (Import)
startContentTabView.import.wrongFormat                                 = The importer does not accept the format {0}. Only JSON, XML or (Jack2)-Zip files are accepted.
startContentTabView.renameFolderDialog                                 = Rename folder
startContentTabView.renameFolderDialog.newName                         = New Name:
startContentTabView.targetFolder                                       = Target Folder
startContentTabView.warnCourseNormalSubmissions                        = Course contains submissions which are not testsubmissions.
startContentTabView.warnCourseNotCreated                               = Course could not be created
startContentTabView.warnCourseNotCreatedMsg                            = Course name must not be empty.
startContentTabView.warnCourseNotDeleted                               = Course could not be deleted
startContentTabView.warnCourseNotDeletedMsg                            = Course is used in courseoffers: {0}.
startContentTabView.warnCourseNotRemoved                               = Course not deleted
startContentTabView.warnExerciseCourseTestSubmission                   = Exercise contains test-submissions for course. You can delete these via the course.
startContentTabView.warnExerciseNormalSubmissions                      = Exercise contains submissions which are not testsubmissions.
startContentTabView.warnExerciseNotCreated                             = Exercise could not be created
startContentTabView.warnExerciseNotCreatedMsg                          = Exercise name must not be empty.
startContentTabView.warnExerciseNotRemoved                             = Exercise not deleted
startContentTabView.warnExerciseNotRemovedMsg                          = Exercise is used by courses: {0}.
startContentTabView.warnFolderNotCreated                               = Content folder could not be created
startContentTabView.warnFolderNotCreatedMsg                            = Folder name must not be empty.

startPresentationTabView.createNewRoot                = Create new root folder
startPresentationTabView.foldername                   = Folder Name
startPresentationTabView.freePlaces                   = ({0} Free Places)
startPresentationTabView.infoCoursesLinked            = Courses have been linked.
startPresentationTabView.infoCoursesUnlinked          = Courses have been unlinked.
startPresentationTabView.newCourseOffer               = New Course Offer
startPresentationTabView.warnCourseNotCreated         = Course could not be created
startPresentationTabView.warnCourseNotCreatedMsg      = Course name must not be empty.
startPresentationTabView.warnCourseOfferNotDeleted    = Course offer not deleted.
startPresentationTabView.warnCourseOfferNotDeletedMsg = Course offer could not be deleted because submissions still refer to it.

statistics = Statistics

statistics.actionDialog.closeSubmissionMessage1  = Do you really want to end the submission of the participant '
statistics.actionDialog.closeSubmissionMessage2  = '?
statistics.actionDialog.closeSubmissionTitle     = End submission manually
statistics.actionDialog.disenrollMessage1        = Do you really want to manually disenroll the participant '
statistics.actionDialog.disenrollMessage2        = '?
statistics.actionDialog.disenrollTitle           = Disenroll user manually
statistics.actionDialog.enrollMessage1           = Do you really want to manually enroll the participant '
statistics.actionDialog.enrollMessage2           = '?
statistics.actionDialog.enrollTitle              = Enroll user manually
statistics.actions.deleteSubmission              = Delete
statistics.actions.disenrollManually             = Disenroll manually
statistics.actions.endSubmissionManually         = End manually
statistics.actions.enrollManually                = Enroll manually
statistics.actions.removeFromWaitinglistManually = Remove from waitinglist
statistics.actions.showLog                       = Show log
statistics.actions.toSubmission                  = Go to submission
statistics.allParticipants                       = All Participants
statistics.avgScore                              = Average Result
statistics.comments                              = Comments
statistics.courseSubmissions                     = Course Submissions
statistics.courseSubmissions.info                = <p>Counts all submissions for a course. A submission goes from the start of the course to the end.</p>\r\n<p><strong>Example 1:</strong> A student is doing an exercise once and restarts the whole exercise. In this case one submission is counted.</p>\r\n<p><strong>Example 2:</strong> In a course with five exercises, each exercise is submitted once and the course is finished afterwards. One submission is counted.</p>\r\n<p><strong>Example 3:</strong> A running course is restarted. When a course is restarted, a new submission is started, so that a total of two submissions are counted.</p>
statistics.disenrollmentDate                     = Disenrollment date
statistics.displaySettings                       = Display Settings
statistics.enrollmentDate                        = Enrollment date
statistics.enrollments                           = Enrolled Participants
statistics.formerParticipants                    = Former Participants
statistics.groupByCourse                         = Group Submissions by Course version
statistics.highestScore                          = Highest Result
statistics.lowestScore                           = Lowest Result
statistics.notStartedExercises                   = Not submitted
statistics.notStartedExercisesHeader             = Not submitted exercises
statistics.participants                          = Participants
statistics.participantsCount                     = Number of participants
statistics.participantsCount.info                = Number of people who have ever interacted with the course.
statistics.showDetails                           = Show Details
statistics.shownProfileFields                    = Shown Profile Fields
statistics.studentSubmissions                    = Student Submissions
statistics.submissionDetails                     = Submission Details
statistics.submissionOverview                    = Submissions Overview
statistics.submissions                           = Submissions
statistics.submissions.info                      = <p>Counts how often exercises have been started resp. started to be processed.</p>\r\n<p><strong>Example 1:</strong> A student is doing an exercise once and restarts the whole exercise. In this case two edits are counted.</p>\r\n<p><strong>Example 2:</strong> In a course with five exercises, each exercise is submitted once. In this case, five tasks are counted.</p>
statistics.testSubmissions                       = Test Submissions
statistics.testSubmissionsPresent                = {0} test submissions were not included in the statistics.
statistics.unreadComments                        = Unread Comments
statistics.waitingParticipants                   = Participants on waiting list
statistics.waitlist                              = Waitlist
statistics.waitlistJoinDate                      = Entered waitlist on

submissionDetails.automaticallyClosed         = System (automatically)
submissionDetails.closedBy                    = Closed by
submissionDetails.commentInfo                 = Information
submissionDetails.commentMarkedRead           = Comment was marked as <i>read</i>.
submissionDetails.commentMarkedUnread         = Comment marked as <i>not read</i>.
submissionDetails.commentNoEmailAddress       = No e-mail address provided
submissionDetails.commentRead                 = Read
submissionDetails.commentUnread               = Not Read
submissionDetails.comments                    = Comments
submissionDetails.course                      = course
submissionDetails.deleteSubmission            = Delete Submission
submissionDetails.emailAddress                = E-mail address of the user
submissionDetails.exercise                    = exercise
submissionDetails.forbiddenSubmission         = You do not have the permission to view this submission!
submissionDetails.generalInformation          = General Information
submissionDetails.notFinishedYet              = Not finished yet
submissionDetails.startTime                   = Started at
submissionDetails.student                     = Author
submissionDetails.type                        = Submissiontype
submissionDetails.type.studentSubmission      = Regular submission for courseoffer
submissionDetails.type.testsubmissionCourse   = Testsubmission for course
submissionDetails.type.testsubmissionExercise = Testsubmission for exercise

systemHealthView.averageLatency            = \u00D8 Latency
systemHealthView.errors                    = Errors
systemHealthView.lastUpdate                = Last Update
systemHealthView.test                      = Test
systemHealthView.test.databaseConnectivity = Database (Connectivity)
systemHealthView.test.databaseWriteAccess  = Datenbank (Write Access)
systemHealthView.test.emailService         = E-Mail Service
systemHealthView.test.evaluator            = Evaluator
systemHealthView.test.failure              = Unknown Test (Internal Error)
systemHealthView.test.freeDiskSpace        = Free Disk Space
systemHealthView.test.load                 = Load
systemHealthView.test.r                    = Evaluator (R Connectivity)
systemHealthView.test.sage                 = Evaluator (Sage Connectivity)
systemHealthView.testsFailed               = Test(s) failed
systemHealthView.testsPassed               = All tests passed.

tenantadmin.addNewCompetence                                 = Add new competence
tenantadmin.addNewConfig                                     = Add new configuration value
tenantadmin.addNewSubcompetence                              = Add new subcompetence
tenantadmin.addNewSubject                                    = Add new subject
tenantadmin.competencies                                     = Competencies
tenantadmin.configCacheOutdated                              = Caution! The shown configuration values are not equal to the values actually used by JACK at the moment. The values will be activated automatically with the next server restart. If you would like to activate the values now, please hit the button. You should avoid to do so if the system is used by many users at the moment, because changes in configuration values can cause delay or short-time interruption of service.
tenantadmin.createUser                                       = Create New User Account
tenantadmin.createUser.emailNotUnique                        = A user with this email address already exists.
tenantadmin.createUser.nameEmpty                             = The username must not be empty.
tenantadmin.createUser.nameNotUnique                         = A user with this name already exists.
tenantadmin.createUserGroup                                  = Create New User Group
tenantadmin.createUserGroup.nameEmpty                        = The user group name must not be empty.
tenantadmin.createUserGroup.nameNotUnique                    = A user group with this name already exists.
tenantadmin.credentialsMail.content                          = <p>\n  Dear JACK user,\n</p>\n\n<p>\n  a new account has just been created for you. You can login with the following credentials:\n</p>\n\n<p>\n  Server: <a href="{0}">{0}</a><br>\n  Username: <b>{1}</b><br>\n  Password: <b>{2}</b>\n</p>\n\n<p>\n  Kind regards,<br>\n  the JACK Team\n</p>\n
tenantadmin.credentialsMail.failedDetail                     = The new user account was created. However, sending the mail with the credentials failed.
tenantadmin.credentialsMail.failedSummary                    = Notification failed.
tenantadmin.credentialsMail.subject                          = Your new JACK account
tenantadmin.customProfileFields                              = Additional Profile Fields
tenantadmin.deleteUser                                       = Delete user
tenantadmin.deleteUser.connectedElements                     = Data which belongs to this user: \\n
tenantadmin.deleteUser.connectedElements.enrollments         = There are enrollments of the user to the following course offers. When you click on the link, you get to the courseOffer-statistics. There you can unroll the user under "Currently enrolled Participants" (Warning: You must have rights on the corresponding courseoffer):
tenantadmin.deleteUser.connectedElements.personalFolder      = There are files in the Personal Folder of the user, which could not be deleted automatically. You can manual delete these, if you assign yourself edit-rights on the folder, open the folder and delete the existing data:
tenantadmin.deleteUser.connectedElements.personalFolder.link = Edit folder-rights
tenantadmin.deleteUser.connectedElements.submissions         = There are submissions which belong to the user. When you click on the ids, you get to the submissions and can delete them (Warning: You must have rights on the corresponding courseoffer/course/exercise): 
tenantadmin.deleteUser.deletionFailed                        = User-Deletion failed
tenantadmin.deleteUser.error                                 = An error occurred while deleting the user.
tenantadmin.deleteUser.info                                  = Users can only be deleted, if no associated data (Not deletable content in Personal Folder, submissions and enrollments) exists.
tenantadmin.deleteUser.notAllowed                            = Deletion is not possible.
tenantadmin.deleteUser.question                              = Do you want to delete the user? The user will be irreversible deleted.
tenantadmin.deleteUser.redirectionError                      = An error occurred while redirecting.
tenantadmin.deleteUser.success                               = User was deleted successfully.
tenantadmin.deleteUser.warning                               = The user can not be deleted, because references data exists.
tenantadmin.deleteUserGroup                                  = Delete user group
tenantadmin.deleteUserGroup.question                         = Are you sure to delete this user group?
tenantadmin.displayName                                      = Display Name
tenantadmin.displayNameDefault                               = Default is "[loginname]". You can use fields even if they are not public.
tenantadmin.displayNameRule.changeNotice                     = A change will be applied with the next server restart or when you activate the new configuration manually via the "Configuration" page.
tenantadmin.displayNameRule.primary                          = Primary Pattern for Display Name
tenantadmin.displayNameRule.secondary                        = Alternative Pattern for Display Name
tenantadmin.doesnotmatter                                    = All
tenantadmin.email                                            = Email
tenantadmin.emptyUserGroupList                               = Currently no user groups exist.
tenantadmin.emptyUserList                                    = There are no user accounts matching your filter criteria.
tenantadmin.errorUpdatingRights                              = Error while changing permissions
tenantadmin.errorUpdatingRights.updateFailed                 = Permissions have not been changed as a parent folder grants more permissions.
tenantadmin.fixedProfileFields                               = Fixed Profile Fields
tenantadmin.folder                                           = Folder
tenantadmin.general                                          = General
tenantadmin.general.jsonValidationError                      = Please enter a valid Json-Array!
tenantadmin.hasAdminRights                                   = Admin Permissions
tenantadmin.hasAdminRights.short                             = Admin
tenantadmin.hasEditRights                                    = Edit Permissions
tenantadmin.hasEditRights.short                              = Edit
tenantadmin.jobs                                             = Jobs
tenantadmin.lastLogin                                        = Last Login
tenantadmin.lockUser                                         = Lock User Account
tenantadmin.lockUser.question                                = Are you sure to lock this user account?
tenantadmin.noUserCourses                                    = No courses
tenantadmin.noUserFolderRights                               = No permissions granted
tenantadmin.password                                         = Password
tenantadmin.performance                                      = Performance
tenantadmin.profileField.name                                = Name
tenantadmin.profileField.public                              = Public
tenantadmin.profileField.type                                = Content
tenantadmin.profileField.type.identity                       = Automatic from identity management
tenantadmin.profileField.type.ldap                           = Automatic from LDAP
tenantadmin.profileField.type.mixed                          = Text or automatic from identity management
tenantadmin.profileField.type.select                         = Selection
tenantadmin.profileField.type.text                           = Text
tenantadmin.profileFields                                    = Profile Fields
tenantadmin.removeRights                                     = Remove Rights
tenantadmin.removeRights.ALL                                 = All folder rights
tenantadmin.removeRights.CONTENT_FOLDERS                     = Only content folder rights
tenantadmin.removeRights.PRESENTATION_FOLDERS                = Only presentation folder rights
tenantadmin.removeRights.done                                = Rights have been reset
tenantadmin.removeRights.remove                              = Remove
tenantadmin.resetCache                                       = Activate configuration now
tenantadmin.resetCacheHeader                                 = Activate configuration
tenantadmin.resetCacheMessage                                = Configuration activated.
tenantadmin.selectedUser                                     = Selected User Account
tenantadmin.sendCredentials                                  = Send Credentials via Mail
tenantadmin.subjects                                         = Subjects
tenantadmin.timestamp                                        = Timestamp
tenantadmin.useJsonFormat                                    = Please use the format ["value"] or. ["value1", "value2"] 
tenantadmin.userContentFolderRights                          = Content Folder Permissions
tenantadmin.userCourses                                      = Running Courses as Student
tenantadmin.userDetails.userNotFound                         = User was not found.
tenantadmin.userFolderRights.missingEditRights               = Only users with edit permissions can own folder permissions.
tenantadmin.userGroupChildren                                = Sub Groups of This Group
tenantadmin.userGroupDescription                             = Description
tenantadmin.userGroupDetails.immediateUpdate                 = Changes to rights and members are applied immediately.
tenantadmin.userGroupDetails.saveGeneralInformation          = Save data
tenantadmin.userGroupDetails.userGroupNotFound               = User Group was not found.
tenantadmin.userGroupMembers                                 = Users in This Group
tenantadmin.userGroupName                                    = Name
tenantadmin.userGroupSubgroups                               = Sub Groups
tenantadmin.userGroupUsers                                   = Members
tenantadmin.userGroups                                       = User Groups
tenantadmin.userGroups.available                             = Available
tenantadmin.userGroups.emptyListForRights                    = No user groups available to add to this folder.
tenantadmin.userGroups.missingEditRights                     = Only users with edit permissions can be member of user groups.
tenantadmin.userGroups.selected                              = Selected
tenantadmin.userLog                                          = User Log
tenantadmin.userManagement                                   = User management
tenantadmin.userPresentationFolderRights                     = Presentation Folder Permissions
tenantadmin.username                                         = Name
tenantadmin.users                                            = User Accounts
tenantadmin.users.emptyListForRights                         = No users available to add to this folder.
tenantadmin.warningEditRights                                = If you save this change, this user will be removed from all user groups. The folder rights must be removed separately!

timestamp.formatter.full     = yyyy-MM-dd h:mm:ss a
timestamp.formatter.long     = MMMM d, yyyy 'at' h:mm a
timestamp.formatter.short    = yyyy-MM-dd h:mm a
timestamp.relative.days      = days
timestamp.relative.future    = in {0} 
timestamp.relative.hour      = hour
timestamp.relative.hours     = hours
timestamp.relative.inAWhile  = in a while
timestamp.relative.longAgo   = long ago
timestamp.relative.minute    = minute
timestamp.relative.minutes   = minutes
timestamp.relative.month     = month
timestamp.relative.months    = months
timestamp.relative.now       = now
timestamp.relative.past      = {0} ago
timestamp.relative.tomorrow  = tomorrow
timestamp.relative.week      = week
timestamp.relative.weeks     = weeks
timestamp.relative.yesterday = yesterday

variableUpdates.afterCheckToolTip   = The variables are updated after the checks have been performed and the feedback has been generated. But before the transitions are evaluated.
variableUpdates.beforeCheckToolTip  = The variables are updated even before the checks are performed and the feedback is generated.
variableUpdates.onEnterToolTip      = The variables are updated even before the task description is displayed.
variableUpdates.onNormalExitToolTip = First the checks are executed and the feedback is generated. Then the transitions are evaluated. If the Subtask was not skipped and the transition is not a 'Repeat Subtask' transition, the variables are updated.
variableUpdates.onRepeatToolTip     = First the checks are executed and the feedback is generated. Then the transitions are evaluated. If the transition is a 'Repeat Subtask' transition, the variables are updated.
variableUpdates.onSkipToolTip       = First the checks are executed and the feedback is generated. Then the transitions are evaluated. If the Subtask was skipped and the transition is not a 'Repeat Subtask' transition, the variables are updated.
